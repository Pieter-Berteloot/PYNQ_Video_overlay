// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filter_copy3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_in_data_stream_0_V_dout,
        img_in_data_stream_0_V_empty_n,
        img_in_data_stream_0_V_read,
        img_in_data_stream_1_V_dout,
        img_in_data_stream_1_V_empty_n,
        img_in_data_stream_1_V_read,
        img_in_data_stream_2_V_dout,
        img_in_data_stream_2_V_empty_n,
        img_in_data_stream_2_V_read,
        img_out0_data_stream_0_V_din,
        img_out0_data_stream_0_V_full_n,
        img_out0_data_stream_0_V_write,
        img_out0_data_stream_1_V_din,
        img_out0_data_stream_1_V_full_n,
        img_out0_data_stream_1_V_write,
        img_out0_data_stream_2_V_din,
        img_out0_data_stream_2_V_full_n,
        img_out0_data_stream_2_V_write,
        img_out1_data_stream_0_V_din,
        img_out1_data_stream_0_V_full_n,
        img_out1_data_stream_0_V_write,
        img_out1_data_stream_1_V_din,
        img_out1_data_stream_1_V_full_n,
        img_out1_data_stream_1_V_write,
        img_out1_data_stream_2_V_din,
        img_out1_data_stream_2_V_full_n,
        img_out1_data_stream_2_V_write,
        img_out2_data_stream_0_V_din,
        img_out2_data_stream_0_V_full_n,
        img_out2_data_stream_0_V_write,
        img_out2_data_stream_1_V_din,
        img_out2_data_stream_1_V_full_n,
        img_out2_data_stream_1_V_write,
        img_out2_data_stream_2_V_din,
        img_out2_data_stream_2_V_full_n,
        img_out2_data_stream_2_V_write
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st5_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv11_438 = 11'b10000111000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv11_780 = 11'b11110000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] img_in_data_stream_0_V_dout;
input   img_in_data_stream_0_V_empty_n;
output   img_in_data_stream_0_V_read;
input  [7:0] img_in_data_stream_1_V_dout;
input   img_in_data_stream_1_V_empty_n;
output   img_in_data_stream_1_V_read;
input  [7:0] img_in_data_stream_2_V_dout;
input   img_in_data_stream_2_V_empty_n;
output   img_in_data_stream_2_V_read;
output  [7:0] img_out0_data_stream_0_V_din;
input   img_out0_data_stream_0_V_full_n;
output   img_out0_data_stream_0_V_write;
output  [7:0] img_out0_data_stream_1_V_din;
input   img_out0_data_stream_1_V_full_n;
output   img_out0_data_stream_1_V_write;
output  [7:0] img_out0_data_stream_2_V_din;
input   img_out0_data_stream_2_V_full_n;
output   img_out0_data_stream_2_V_write;
output  [7:0] img_out1_data_stream_0_V_din;
input   img_out1_data_stream_0_V_full_n;
output   img_out1_data_stream_0_V_write;
output  [7:0] img_out1_data_stream_1_V_din;
input   img_out1_data_stream_1_V_full_n;
output   img_out1_data_stream_1_V_write;
output  [7:0] img_out1_data_stream_2_V_din;
input   img_out1_data_stream_2_V_full_n;
output   img_out1_data_stream_2_V_write;
output  [7:0] img_out2_data_stream_0_V_din;
input   img_out2_data_stream_0_V_full_n;
output   img_out2_data_stream_0_V_write;
output  [7:0] img_out2_data_stream_1_V_din;
input   img_out2_data_stream_1_V_full_n;
output   img_out2_data_stream_1_V_write;
output  [7:0] img_out2_data_stream_2_V_din;
input   img_out2_data_stream_2_V_full_n;
output   img_out2_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_in_data_stream_0_V_read;
reg img_in_data_stream_1_V_read;
reg img_in_data_stream_2_V_read;
reg img_out0_data_stream_0_V_write;
reg img_out0_data_stream_1_V_write;
reg img_out0_data_stream_2_V_write;
reg img_out1_data_stream_0_V_write;
reg img_out1_data_stream_1_V_write;
reg img_out1_data_stream_2_V_write;
reg img_out2_data_stream_0_V_write;
reg img_out2_data_stream_1_V_write;
reg img_out2_data_stream_2_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
reg    img_in_data_stream_0_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_83;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg   [0:0] exitcond_reg_221;
reg    img_in_data_stream_1_V_blk_n;
reg    img_in_data_stream_2_V_blk_n;
reg    img_out0_data_stream_0_V_blk_n;
reg    img_out0_data_stream_1_V_blk_n;
reg    img_out0_data_stream_2_V_blk_n;
reg    img_out1_data_stream_0_V_blk_n;
reg    img_out1_data_stream_1_V_blk_n;
reg    img_out1_data_stream_2_V_blk_n;
reg    img_out2_data_stream_0_V_blk_n;
reg    img_out2_data_stream_1_V_blk_n;
reg    img_out2_data_stream_2_V_blk_n;
reg   [10:0] col_reg_177;
wire   [0:0] exitcond1_fu_188_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_114;
wire   [10:0] row_1_fu_194_p2;
reg   [10:0] row_1_reg_216;
wire   [0:0] exitcond_fu_200_p2;
reg    ap_sig_154;
wire   [10:0] col_1_fu_206_p2;
reg   [10:0] row_reg_166;
reg    ap_sig_175;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_183;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_188_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154) & ~(1'b0 == exitcond_fu_200_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_188_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154) & (1'b0 == exitcond_fu_200_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_188_p2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154) & ~(1'b0 == exitcond_fu_200_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154) & (1'b0 == exitcond_fu_200_p2))) begin
        col_reg_177 <= col_1_fu_206_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_188_p2))) begin
        col_reg_177 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        row_reg_166 <= row_1_reg_216;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_175)) begin
        row_reg_166 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        exitcond_reg_221 <= exitcond_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        row_1_reg_216 <= row_1_fu_194_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_188_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_188_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_83) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_114) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_183) begin
        ap_sig_cseq_ST_st5_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_in_data_stream_0_V_blk_n = img_in_data_stream_0_V_empty_n;
    end else begin
        img_in_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_in_data_stream_0_V_read = 1'b1;
    end else begin
        img_in_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_in_data_stream_1_V_blk_n = img_in_data_stream_1_V_empty_n;
    end else begin
        img_in_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_in_data_stream_1_V_read = 1'b1;
    end else begin
        img_in_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_in_data_stream_2_V_blk_n = img_in_data_stream_2_V_empty_n;
    end else begin
        img_in_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_in_data_stream_2_V_read = 1'b1;
    end else begin
        img_in_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_out0_data_stream_0_V_blk_n = img_out0_data_stream_0_V_full_n;
    end else begin
        img_out0_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_out0_data_stream_0_V_write = 1'b1;
    end else begin
        img_out0_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_out0_data_stream_1_V_blk_n = img_out0_data_stream_1_V_full_n;
    end else begin
        img_out0_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_out0_data_stream_1_V_write = 1'b1;
    end else begin
        img_out0_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_out0_data_stream_2_V_blk_n = img_out0_data_stream_2_V_full_n;
    end else begin
        img_out0_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_out0_data_stream_2_V_write = 1'b1;
    end else begin
        img_out0_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_out1_data_stream_0_V_blk_n = img_out1_data_stream_0_V_full_n;
    end else begin
        img_out1_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_out1_data_stream_0_V_write = 1'b1;
    end else begin
        img_out1_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_out1_data_stream_1_V_blk_n = img_out1_data_stream_1_V_full_n;
    end else begin
        img_out1_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_out1_data_stream_1_V_write = 1'b1;
    end else begin
        img_out1_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_out1_data_stream_2_V_blk_n = img_out1_data_stream_2_V_full_n;
    end else begin
        img_out1_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_out1_data_stream_2_V_write = 1'b1;
    end else begin
        img_out1_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_out2_data_stream_0_V_blk_n = img_out2_data_stream_0_V_full_n;
    end else begin
        img_out2_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_out2_data_stream_0_V_write = 1'b1;
    end else begin
        img_out2_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_out2_data_stream_1_V_blk_n = img_out2_data_stream_1_V_full_n;
    end else begin
        img_out2_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_out2_data_stream_1_V_write = 1'b1;
    end else begin
        img_out2_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0))) begin
        img_out2_data_stream_2_V_blk_n = img_out2_data_stream_2_V_full_n;
    end else begin
        img_out2_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_221 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154))) begin
        img_out2_data_stream_2_V_write = 1'b1;
    end else begin
        img_out2_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_175) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond1_fu_188_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154) & ~(1'b0 == exitcond_fu_200_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_154) & ~(1'b0 == exitcond_fu_200_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st5_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_114 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_154 = (((exitcond_reg_221 == 1'b0) & (img_in_data_stream_0_V_empty_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_in_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_in_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_out0_data_stream_0_V_full_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_out0_data_stream_1_V_full_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_out0_data_stream_2_V_full_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_out1_data_stream_0_V_full_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_out1_data_stream_1_V_full_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_out1_data_stream_2_V_full_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_out2_data_stream_0_V_full_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_out2_data_stream_1_V_full_n == 1'b0)) | ((exitcond_reg_221 == 1'b0) & (img_out2_data_stream_2_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_175 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_sig_183 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_83 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign col_1_fu_206_p2 = (col_reg_177 + ap_const_lv11_1);

assign exitcond1_fu_188_p2 = ((row_reg_166 == ap_const_lv11_438) ? 1'b1 : 1'b0);

assign exitcond_fu_200_p2 = ((col_reg_177 == ap_const_lv11_780) ? 1'b1 : 1'b0);

assign img_out0_data_stream_0_V_din = img_in_data_stream_0_V_dout;

assign img_out0_data_stream_1_V_din = img_in_data_stream_1_V_dout;

assign img_out0_data_stream_2_V_din = img_in_data_stream_2_V_dout;

assign img_out1_data_stream_0_V_din = img_in_data_stream_0_V_dout;

assign img_out1_data_stream_1_V_din = img_in_data_stream_1_V_dout;

assign img_out1_data_stream_2_V_din = img_in_data_stream_2_V_dout;

assign img_out2_data_stream_0_V_din = img_in_data_stream_0_V_dout;

assign img_out2_data_stream_1_V_din = img_in_data_stream_1_V_dout;

assign img_out2_data_stream_2_V_din = img_in_data_stream_2_V_dout;

assign row_1_fu_194_p2 = (row_reg_166 + ap_const_lv11_1);

endmodule //filter_copy3
