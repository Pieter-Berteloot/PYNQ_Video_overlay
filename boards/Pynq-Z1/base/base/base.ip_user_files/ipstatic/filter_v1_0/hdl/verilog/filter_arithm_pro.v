// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filter_arithm_pro (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src1_data_stream_0_V_dout,
        src1_data_stream_0_V_empty_n,
        src1_data_stream_0_V_read,
        src1_data_stream_1_V_dout,
        src1_data_stream_1_V_empty_n,
        src1_data_stream_1_V_read,
        src1_data_stream_2_V_dout,
        src1_data_stream_2_V_empty_n,
        src1_data_stream_2_V_read,
        src2_data_stream_0_V_dout,
        src2_data_stream_0_V_empty_n,
        src2_data_stream_0_V_read,
        src2_data_stream_1_V_dout,
        src2_data_stream_1_V_empty_n,
        src2_data_stream_1_V_read,
        src2_data_stream_2_V_dout,
        src2_data_stream_2_V_empty_n,
        src2_data_stream_2_V_read,
        dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n,
        dst_data_stream_0_V_write,
        dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n,
        dst_data_stream_1_V_write,
        dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n,
        dst_data_stream_2_V_write
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st6_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv11_438 = 11'b10000111000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv11_780 = 11'b11110000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_FF = 8'b11111111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] src1_data_stream_0_V_dout;
input   src1_data_stream_0_V_empty_n;
output   src1_data_stream_0_V_read;
input  [7:0] src1_data_stream_1_V_dout;
input   src1_data_stream_1_V_empty_n;
output   src1_data_stream_1_V_read;
input  [7:0] src1_data_stream_2_V_dout;
input   src1_data_stream_2_V_empty_n;
output   src1_data_stream_2_V_read;
input  [7:0] src2_data_stream_0_V_dout;
input   src2_data_stream_0_V_empty_n;
output   src2_data_stream_0_V_read;
input  [7:0] src2_data_stream_1_V_dout;
input   src2_data_stream_1_V_empty_n;
output   src2_data_stream_1_V_read;
input  [7:0] src2_data_stream_2_V_dout;
input   src2_data_stream_2_V_empty_n;
output   src2_data_stream_2_V_read;
output  [7:0] dst_data_stream_0_V_din;
input   dst_data_stream_0_V_full_n;
output   dst_data_stream_0_V_write;
output  [7:0] dst_data_stream_1_V_din;
input   dst_data_stream_1_V_full_n;
output   dst_data_stream_1_V_write;
output  [7:0] dst_data_stream_2_V_din;
input   dst_data_stream_2_V_full_n;
output   dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src1_data_stream_0_V_read;
reg src1_data_stream_1_V_read;
reg src1_data_stream_2_V_read;
reg src2_data_stream_0_V_read;
reg src2_data_stream_1_V_read;
reg src2_data_stream_2_V_read;
reg dst_data_stream_0_V_write;
reg dst_data_stream_1_V_write;
reg dst_data_stream_2_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_21;
reg    src1_data_stream_0_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_68;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it2;
reg   [0:0] exitcond2_reg_296;
reg    src1_data_stream_1_V_blk_n;
reg    src1_data_stream_2_V_blk_n;
reg    src2_data_stream_0_V_blk_n;
reg    src2_data_stream_1_V_blk_n;
reg    src2_data_stream_2_V_blk_n;
reg    dst_data_stream_0_V_blk_n;
reg   [0:0] ap_reg_ppstg_exitcond2_reg_296_pp0_iter1;
reg    dst_data_stream_1_V_blk_n;
reg    dst_data_stream_2_V_blk_n;
reg   [10:0] p_1_reg_144;
wire   [0:0] exitcond1_fu_155_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_101;
wire   [10:0] i_V_fu_161_p2;
reg   [10:0] i_V_reg_291;
wire   [0:0] exitcond2_fu_167_p2;
reg    ap_sig_123;
reg    ap_sig_133;
wire   [10:0] j_V_fu_173_p2;
wire   [7:0] p_Val2_9_fu_207_p3;
reg   [7:0] p_Val2_9_reg_305;
wire   [7:0] p_Val2_10_fu_243_p3;
reg   [7:0] p_Val2_10_reg_310;
wire   [7:0] p_Val2_11_fu_279_p3;
reg   [7:0] p_Val2_11_reg_315;
reg   [10:0] p_s_reg_133;
reg    ap_sig_cseq_ST_st6_fsm_3;
reg    ap_sig_168;
wire   [8:0] rhs_V_cast_fu_183_p1;
wire   [8:0] lhs_V_2_cast_fu_179_p1;
wire   [8:0] p_Val2_1_fu_193_p2;
wire   [0:0] overflow_fu_199_p3;
wire   [7:0] p_Val2_2_fu_187_p2;
wire   [8:0] rhs_V_1_cast_fu_219_p1;
wire   [8:0] lhs_V_2_1_cast_fu_215_p1;
wire   [8:0] p_Val2_4_fu_229_p2;
wire   [0:0] overflow_1_fu_235_p3;
wire   [7:0] p_Val2_5_fu_223_p2;
wire   [8:0] rhs_V_2_cast_fu_255_p1;
wire   [8:0] lhs_V_2_2_cast_fu_251_p1;
wire   [8:0] p_Val2_s_fu_265_p2;
wire   [0:0] overflow_2_fu_271_p3;
wire   [7:0] p_Val2_6_fu_259_p2;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b0 == exitcond2_fu_167_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_155_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & (1'b0 == exitcond2_fu_167_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_155_p2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b0 == exitcond2_fu_167_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_155_p2))) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & (1'b0 == exitcond2_fu_167_p2))) begin
        p_1_reg_144 <= j_V_fu_173_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_155_p2))) begin
        p_1_reg_144 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_3)) begin
        p_s_reg_133 <= i_V_reg_291;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        p_s_reg_133 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        ap_reg_ppstg_exitcond2_reg_296_pp0_iter1 <= exitcond2_reg_296;
        exitcond2_reg_296 <= exitcond2_fu_167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_V_reg_291 <= i_V_fu_161_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond2_reg_296 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        p_Val2_10_reg_310 <= p_Val2_10_fu_243_p3;
        p_Val2_11_reg_315 <= p_Val2_11_fu_279_p3;
        p_Val2_9_reg_305 <= p_Val2_9_fu_207_p3;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_155_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_155_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_68) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_21) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_101) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_168) begin
        ap_sig_cseq_ST_st6_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond2_reg_296_pp0_iter1))) begin
        dst_data_stream_0_V_blk_n = dst_data_stream_0_V_full_n;
    end else begin
        dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond2_reg_296_pp0_iter1) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        dst_data_stream_0_V_write = 1'b1;
    end else begin
        dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond2_reg_296_pp0_iter1))) begin
        dst_data_stream_1_V_blk_n = dst_data_stream_1_V_full_n;
    end else begin
        dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond2_reg_296_pp0_iter1) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        dst_data_stream_1_V_write = 1'b1;
    end else begin
        dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond2_reg_296_pp0_iter1))) begin
        dst_data_stream_2_V_blk_n = dst_data_stream_2_V_full_n;
    end else begin
        dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond2_reg_296_pp0_iter1) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        dst_data_stream_2_V_write = 1'b1;
    end else begin
        dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0))) begin
        src1_data_stream_0_V_blk_n = src1_data_stream_0_V_empty_n;
    end else begin
        src1_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src1_data_stream_0_V_read = 1'b1;
    end else begin
        src1_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0))) begin
        src1_data_stream_1_V_blk_n = src1_data_stream_1_V_empty_n;
    end else begin
        src1_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src1_data_stream_1_V_read = 1'b1;
    end else begin
        src1_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0))) begin
        src1_data_stream_2_V_blk_n = src1_data_stream_2_V_empty_n;
    end else begin
        src1_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src1_data_stream_2_V_read = 1'b1;
    end else begin
        src1_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0))) begin
        src2_data_stream_0_V_blk_n = src2_data_stream_0_V_empty_n;
    end else begin
        src2_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src2_data_stream_0_V_read = 1'b1;
    end else begin
        src2_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0))) begin
        src2_data_stream_1_V_blk_n = src2_data_stream_1_V_empty_n;
    end else begin
        src2_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src2_data_stream_1_V_read = 1'b1;
    end else begin
        src2_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0))) begin
        src2_data_stream_2_V_blk_n = src2_data_stream_2_V_empty_n;
    end else begin
        src2_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond2_reg_296 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)))) begin
        src2_data_stream_2_V_read = 1'b1;
    end else begin
        src2_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond1_fu_155_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b0 == exitcond2_fu_167_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_123) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ap_sig_133)) & ~(1'b0 == exitcond2_fu_167_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st6_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st6_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_101 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_123 = (((exitcond2_reg_296 == 1'b0) & (src1_data_stream_0_V_empty_n == 1'b0)) | ((exitcond2_reg_296 == 1'b0) & (src1_data_stream_1_V_empty_n == 1'b0)) | ((exitcond2_reg_296 == 1'b0) & (src1_data_stream_2_V_empty_n == 1'b0)) | ((exitcond2_reg_296 == 1'b0) & (src2_data_stream_0_V_empty_n == 1'b0)) | ((exitcond2_reg_296 == 1'b0) & (src2_data_stream_1_V_empty_n == 1'b0)) | ((exitcond2_reg_296 == 1'b0) & (src2_data_stream_2_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_sig_133 = (((1'b0 == ap_reg_ppstg_exitcond2_reg_296_pp0_iter1) & (dst_data_stream_0_V_full_n == 1'b0)) | ((1'b0 == ap_reg_ppstg_exitcond2_reg_296_pp0_iter1) & (dst_data_stream_1_V_full_n == 1'b0)) | ((1'b0 == ap_reg_ppstg_exitcond2_reg_296_pp0_iter1) & (dst_data_stream_2_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_168 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_21 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_68 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign dst_data_stream_0_V_din = p_Val2_9_reg_305;

assign dst_data_stream_1_V_din = p_Val2_10_reg_310;

assign dst_data_stream_2_V_din = p_Val2_11_reg_315;

assign exitcond1_fu_155_p2 = ((p_s_reg_133 == ap_const_lv11_438) ? 1'b1 : 1'b0);

assign exitcond2_fu_167_p2 = ((p_1_reg_144 == ap_const_lv11_780) ? 1'b1 : 1'b0);

assign i_V_fu_161_p2 = (p_s_reg_133 + ap_const_lv11_1);

assign j_V_fu_173_p2 = (p_1_reg_144 + ap_const_lv11_1);

assign lhs_V_2_1_cast_fu_215_p1 = src1_data_stream_1_V_dout;

assign lhs_V_2_2_cast_fu_251_p1 = src1_data_stream_2_V_dout;

assign lhs_V_2_cast_fu_179_p1 = src1_data_stream_0_V_dout;

assign overflow_1_fu_235_p3 = p_Val2_4_fu_229_p2[ap_const_lv32_8];

assign overflow_2_fu_271_p3 = p_Val2_s_fu_265_p2[ap_const_lv32_8];

assign overflow_fu_199_p3 = p_Val2_1_fu_193_p2[ap_const_lv32_8];

assign p_Val2_10_fu_243_p3 = ((overflow_1_fu_235_p3[0:0] === 1'b1) ? ap_const_lv8_FF : p_Val2_5_fu_223_p2);

assign p_Val2_11_fu_279_p3 = ((overflow_2_fu_271_p3[0:0] === 1'b1) ? ap_const_lv8_FF : p_Val2_6_fu_259_p2);

assign p_Val2_1_fu_193_p2 = (rhs_V_cast_fu_183_p1 + lhs_V_2_cast_fu_179_p1);

assign p_Val2_2_fu_187_p2 = (src1_data_stream_0_V_dout + src2_data_stream_0_V_dout);

assign p_Val2_4_fu_229_p2 = (rhs_V_1_cast_fu_219_p1 + lhs_V_2_1_cast_fu_215_p1);

assign p_Val2_5_fu_223_p2 = (src1_data_stream_1_V_dout + src2_data_stream_1_V_dout);

assign p_Val2_6_fu_259_p2 = (src1_data_stream_2_V_dout + src2_data_stream_2_V_dout);

assign p_Val2_9_fu_207_p3 = ((overflow_fu_199_p3[0:0] === 1'b1) ? ap_const_lv8_FF : p_Val2_2_fu_187_p2);

assign p_Val2_s_fu_265_p2 = (rhs_V_2_cast_fu_255_p1 + lhs_V_2_2_cast_fu_251_p1);

assign rhs_V_1_cast_fu_219_p1 = src2_data_stream_1_V_dout;

assign rhs_V_2_cast_fu_255_p1 = src2_data_stream_2_V_dout;

assign rhs_V_cast_fu_183_p1 = src2_data_stream_0_V_dout;

endmodule //filter_arithm_pro
