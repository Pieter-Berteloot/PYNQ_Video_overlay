// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filter_Loop_3_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        Sh_val_0_V_0_out_din,
        Sh_val_0_V_0_out_full_n,
        Sh_val_0_V_0_out_write,
        Sh_val_0_V_1_out_din,
        Sh_val_0_V_1_out_full_n,
        Sh_val_0_V_1_out_write,
        Sh_val_0_V_2_out_din,
        Sh_val_0_V_2_out_full_n,
        Sh_val_0_V_2_out_write,
        Sh_val_1_V_0_out_din,
        Sh_val_1_V_0_out_full_n,
        Sh_val_1_V_0_out_write,
        Sh_val_1_V_1_out_din,
        Sh_val_1_V_1_out_full_n,
        Sh_val_1_V_1_out_write,
        Sh_val_1_V_2_out_din,
        Sh_val_1_V_2_out_full_n,
        Sh_val_1_V_2_out_write,
        Sh_val_2_V_0_out_din,
        Sh_val_2_V_0_out_full_n,
        Sh_val_2_V_0_out_write,
        Sh_val_2_V_1_out_din,
        Sh_val_2_V_1_out_full_n,
        Sh_val_2_V_1_out_write,
        Sh_val_2_V_2_out_din,
        Sh_val_2_V_2_out_full_n,
        Sh_val_2_V_2_out_write
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_st3_fsm_2 = 4'b100;
parameter    ap_ST_st4_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [7:0] Sh_val_0_V_0_out_din;
input   Sh_val_0_V_0_out_full_n;
output   Sh_val_0_V_0_out_write;
output  [7:0] Sh_val_0_V_1_out_din;
input   Sh_val_0_V_1_out_full_n;
output   Sh_val_0_V_1_out_write;
output  [7:0] Sh_val_0_V_2_out_din;
input   Sh_val_0_V_2_out_full_n;
output   Sh_val_0_V_2_out_write;
output  [7:0] Sh_val_1_V_0_out_din;
input   Sh_val_1_V_0_out_full_n;
output   Sh_val_1_V_0_out_write;
output  [7:0] Sh_val_1_V_1_out_din;
input   Sh_val_1_V_1_out_full_n;
output   Sh_val_1_V_1_out_write;
output  [7:0] Sh_val_1_V_2_out_din;
input   Sh_val_1_V_2_out_full_n;
output   Sh_val_1_V_2_out_write;
output  [7:0] Sh_val_2_V_0_out_din;
input   Sh_val_2_V_0_out_full_n;
output   Sh_val_2_V_0_out_write;
output  [7:0] Sh_val_2_V_1_out_din;
input   Sh_val_2_V_1_out_full_n;
output   Sh_val_2_V_1_out_write;
output  [7:0] Sh_val_2_V_2_out_din;
input   Sh_val_2_V_2_out_full_n;
output   Sh_val_2_V_2_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Sh_val_0_V_0_out_write;
reg Sh_val_0_V_1_out_write;
reg Sh_val_0_V_2_out_write;
reg Sh_val_1_V_0_out_write;
reg Sh_val_1_V_1_out_write;
reg Sh_val_1_V_2_out_write;
reg Sh_val_2_V_0_out_write;
reg Sh_val_2_V_1_out_write;
reg Sh_val_2_V_2_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
wire   [3:0] coef_h_address0;
reg    coef_h_ce0;
wire   [6:0] coef_h_q0;
reg    Sh_val_0_V_0_out_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_78;
wire   [0:0] exitcond1_i_fu_221_p2;
reg    Sh_val_0_V_1_out_blk_n;
reg    Sh_val_0_V_2_out_blk_n;
reg    Sh_val_1_V_0_out_blk_n;
reg    Sh_val_1_V_1_out_blk_n;
reg    Sh_val_1_V_2_out_blk_n;
reg    Sh_val_2_V_0_out_blk_n;
reg    Sh_val_2_V_1_out_blk_n;
reg    Sh_val_2_V_2_out_blk_n;
wire   [1:0] r_fu_227_p2;
reg   [1:0] r_reg_703;
reg    ap_sig_121;
wire   [4:0] tmp_2_fu_249_p2;
reg   [4:0] tmp_2_reg_708;
wire   [0:0] sel_tmp_fu_255_p2;
reg   [0:0] sel_tmp_reg_713;
wire   [0:0] sel_tmp2_fu_261_p2;
reg   [0:0] sel_tmp2_reg_719;
wire   [0:0] sel_tmp13_fu_279_p2;
reg   [0:0] sel_tmp13_reg_726;
wire   [1:0] c_fu_291_p2;
reg   [1:0] c_reg_735;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_140;
wire   [0:0] exitcond_i_fu_285_p2;
wire   [0:0] tmp_5_fu_317_p2;
reg   [0:0] tmp_5_reg_745;
reg   [1:0] r3_i_reg_161;
reg    ap_sig_155;
reg   [1:0] c4_i_reg_173;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_167;
wire  signed [63:0] tmp_18_cast_fu_306_p1;
reg   [7:0] Sh_val_2_V_2_1_fu_50;
wire   [7:0] Sh_val_2_V_2_23_fu_593_p3;
reg   [7:0] Sh_val_2_V_2_4_fu_54;
wire   [7:0] Sh_val_2_V_2_22_fu_569_p3;
reg   [7:0] Sh_val_2_V_2_6_fu_58;
wire   [7:0] Sh_val_2_V_2_21_fu_545_p3;
reg   [7:0] Sh_val_2_V_2_8_fu_62;
wire   [7:0] Sh_val_2_V_2_20_fu_513_p3;
reg   [7:0] Sh_val_2_V_2_10_fu_66;
wire   [7:0] Sh_val_2_V_2_9_fu_497_p3;
reg   [7:0] Sh_val_2_V_2_13_fu_70;
wire   [7:0] Sh_val_2_V_2_7_fu_473_p3;
reg   [7:0] Sh_val_2_V_2_14_fu_74;
wire   [7:0] Sh_val_2_V_2_5_fu_457_p3;
reg   [7:0] Sh_val_2_V_2_15_fu_78;
wire   [7:0] Sh_val_2_V_2_3_fu_449_p3;
reg   [7:0] Sh_val_2_V_2_16_fu_82;
wire   [7:0] Sh_val_2_V_2_fu_433_p3;
wire   [3:0] tmp_1_fu_237_p3;
wire   [4:0] p_shl_cast_fu_245_p1;
wire   [4:0] tmp_27_i_cast_fu_233_p1;
wire   [0:0] sel_tmp11_fu_267_p2;
wire   [0:0] sel_tmp12_fu_273_p2;
wire   [4:0] tmp_29_i_cast_fu_297_p1;
wire   [4:0] tmp_3_fu_301_p2;
wire   [1:0] tmp_s_fu_311_p2;
wire   [0:0] sel_tmp3_fu_327_p2;
wire   [0:0] sel_tmp5_fu_333_p2;
wire   [0:0] tmp_fu_339_p2;
wire   [0:0] sel_tmp9_fu_350_p2;
wire   [0:0] sel_tmp8_fu_371_p2;
wire   [0:0] sel_tmp15_fu_387_p2;
wire   [0:0] sel_tmp14_fu_382_p2;
wire   [0:0] sel_tmp10_fu_377_p2;
wire   [0:0] sel_tmp7_fu_366_p2;
wire   [0:0] sel_tmp4_fu_361_p2;
wire   [0:0] sel_tmp1_fu_356_p2;
wire   [0:0] sel_tmp6_fu_345_p2;
wire   [0:0] or_cond_fu_392_p2;
wire   [0:0] or_cond1_fu_398_p2;
wire   [0:0] or_cond2_fu_404_p2;
wire   [0:0] or_cond3_fu_409_p2;
wire   [0:0] or_cond4_fu_415_p2;
wire   [0:0] or_cond5_fu_421_p2;
wire   [0:0] or_cond6_fu_427_p2;
wire  signed [7:0] Sh_val_2_V_0_cast_fu_323_p1;
wire   [7:0] Sh_val_2_V_2_2_fu_441_p3;
wire   [7:0] newSel_fu_465_p3;
wire   [7:0] newSel2_fu_481_p3;
wire   [7:0] newSel3_fu_489_p3;
wire   [7:0] newSel5_fu_505_p3;
wire   [7:0] newSel7_fu_521_p3;
wire   [7:0] newSel8_fu_529_p3;
wire   [7:0] newSel9_fu_537_p3;
wire   [7:0] newSel1_fu_553_p3;
wire   [7:0] newSel4_fu_561_p3;
wire   [7:0] newSel6_fu_577_p3;
wire   [7:0] newSel10_fu_585_p3;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
end

filter_Loop_3_proc_coef_h #(
    .DataWidth( 7 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
coef_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(coef_h_address0),
    .ce0(coef_h_ce0),
    .q0(coef_h_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c4_i_reg_173 <= c_reg_735;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        c4_i_reg_173 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond_i_fu_285_p2))) begin
        r3_i_reg_161 <= r_reg_703;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_155)) begin
        r3_i_reg_161 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        Sh_val_2_V_2_10_fu_66 <= Sh_val_2_V_2_9_fu_497_p3;
        Sh_val_2_V_2_13_fu_70 <= Sh_val_2_V_2_7_fu_473_p3;
        Sh_val_2_V_2_14_fu_74 <= Sh_val_2_V_2_5_fu_457_p3;
        Sh_val_2_V_2_15_fu_78 <= Sh_val_2_V_2_3_fu_449_p3;
        Sh_val_2_V_2_16_fu_82 <= Sh_val_2_V_2_fu_433_p3;
        Sh_val_2_V_2_1_fu_50 <= Sh_val_2_V_2_23_fu_593_p3;
        Sh_val_2_V_2_4_fu_54 <= Sh_val_2_V_2_22_fu_569_p3;
        Sh_val_2_V_2_6_fu_58 <= Sh_val_2_V_2_21_fu_545_p3;
        Sh_val_2_V_2_8_fu_62 <= Sh_val_2_V_2_20_fu_513_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_reg_735 <= c_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_121)) begin
        r_reg_703 <= r_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        sel_tmp13_reg_726 <= sel_tmp13_fu_279_p2;
        sel_tmp2_reg_719 <= sel_tmp2_fu_261_p2;
        sel_tmp_reg_713 <= sel_tmp_fu_255_p2;
        tmp_2_reg_708 <= tmp_2_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond_i_fu_285_p2))) begin
        tmp_5_reg_745 <= tmp_5_fu_317_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0))) begin
        Sh_val_0_V_0_out_blk_n = Sh_val_0_V_0_out_full_n;
    end else begin
        Sh_val_0_V_0_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        Sh_val_0_V_0_out_write = 1'b1;
    end else begin
        Sh_val_0_V_0_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0))) begin
        Sh_val_0_V_1_out_blk_n = Sh_val_0_V_1_out_full_n;
    end else begin
        Sh_val_0_V_1_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        Sh_val_0_V_1_out_write = 1'b1;
    end else begin
        Sh_val_0_V_1_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0))) begin
        Sh_val_0_V_2_out_blk_n = Sh_val_0_V_2_out_full_n;
    end else begin
        Sh_val_0_V_2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        Sh_val_0_V_2_out_write = 1'b1;
    end else begin
        Sh_val_0_V_2_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0))) begin
        Sh_val_1_V_0_out_blk_n = Sh_val_1_V_0_out_full_n;
    end else begin
        Sh_val_1_V_0_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        Sh_val_1_V_0_out_write = 1'b1;
    end else begin
        Sh_val_1_V_0_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0))) begin
        Sh_val_1_V_1_out_blk_n = Sh_val_1_V_1_out_full_n;
    end else begin
        Sh_val_1_V_1_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        Sh_val_1_V_1_out_write = 1'b1;
    end else begin
        Sh_val_1_V_1_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0))) begin
        Sh_val_1_V_2_out_blk_n = Sh_val_1_V_2_out_full_n;
    end else begin
        Sh_val_1_V_2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        Sh_val_1_V_2_out_write = 1'b1;
    end else begin
        Sh_val_1_V_2_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0))) begin
        Sh_val_2_V_0_out_blk_n = Sh_val_2_V_0_out_full_n;
    end else begin
        Sh_val_2_V_0_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        Sh_val_2_V_0_out_write = 1'b1;
    end else begin
        Sh_val_2_V_0_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0))) begin
        Sh_val_2_V_1_out_blk_n = Sh_val_2_V_1_out_full_n;
    end else begin
        Sh_val_2_V_1_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        Sh_val_2_V_1_out_write = 1'b1;
    end else begin
        Sh_val_2_V_1_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0))) begin
        Sh_val_2_V_2_out_blk_n = Sh_val_2_V_2_out_full_n;
    end else begin
        Sh_val_2_V_2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        Sh_val_2_V_2_out_write = 1'b1;
    end else begin
        Sh_val_2_V_2_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_78) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_140) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_167) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        coef_h_ce0 = 1'b1;
    end else begin
        coef_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_155) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((~(exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((exitcond1_i_fu_221_p2 == 1'b0) & ~ap_sig_121)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((1'b0 == exitcond_i_fu_285_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Sh_val_0_V_0_out_din = Sh_val_2_V_2_1_fu_50;

assign Sh_val_0_V_1_out_din = Sh_val_2_V_2_4_fu_54;

assign Sh_val_0_V_2_out_din = Sh_val_2_V_2_6_fu_58;

assign Sh_val_1_V_0_out_din = Sh_val_2_V_2_8_fu_62;

assign Sh_val_1_V_1_out_din = Sh_val_2_V_2_10_fu_66;

assign Sh_val_1_V_2_out_din = Sh_val_2_V_2_13_fu_70;

assign Sh_val_2_V_0_cast_fu_323_p1 = $signed(coef_h_q0);

assign Sh_val_2_V_0_out_din = Sh_val_2_V_2_14_fu_74;

assign Sh_val_2_V_1_out_din = Sh_val_2_V_2_15_fu_78;

assign Sh_val_2_V_2_20_fu_513_p3 = ((or_cond_fu_392_p2[0:0] === 1'b1) ? Sh_val_2_V_2_8_fu_62 : newSel5_fu_505_p3);

assign Sh_val_2_V_2_21_fu_545_p3 = ((or_cond6_fu_427_p2[0:0] === 1'b1) ? newSel9_fu_537_p3 : Sh_val_2_V_2_6_fu_58);

assign Sh_val_2_V_2_22_fu_569_p3 = ((or_cond4_fu_415_p2[0:0] === 1'b1) ? Sh_val_2_V_2_4_fu_54 : newSel4_fu_561_p3);

assign Sh_val_2_V_2_23_fu_593_p3 = ((or_cond4_fu_415_p2[0:0] === 1'b1) ? Sh_val_2_V_2_1_fu_50 : newSel10_fu_585_p3);

assign Sh_val_2_V_2_2_fu_441_p3 = ((sel_tmp14_fu_382_p2[0:0] === 1'b1) ? Sh_val_2_V_0_cast_fu_323_p1 : Sh_val_2_V_2_15_fu_78);

assign Sh_val_2_V_2_3_fu_449_p3 = ((sel_tmp15_fu_387_p2[0:0] === 1'b1) ? Sh_val_2_V_2_15_fu_78 : Sh_val_2_V_2_2_fu_441_p3);

assign Sh_val_2_V_2_5_fu_457_p3 = ((sel_tmp15_fu_387_p2[0:0] === 1'b1) ? Sh_val_2_V_0_cast_fu_323_p1 : Sh_val_2_V_2_14_fu_74);

assign Sh_val_2_V_2_7_fu_473_p3 = ((or_cond4_fu_415_p2[0:0] === 1'b1) ? Sh_val_2_V_2_13_fu_70 : newSel_fu_465_p3);

assign Sh_val_2_V_2_9_fu_497_p3 = ((or_cond4_fu_415_p2[0:0] === 1'b1) ? newSel3_fu_489_p3 : Sh_val_2_V_2_10_fu_66);

assign Sh_val_2_V_2_fu_433_p3 = ((or_cond6_fu_427_p2[0:0] === 1'b1) ? Sh_val_2_V_2_16_fu_82 : Sh_val_2_V_0_cast_fu_323_p1);

assign Sh_val_2_V_2_out_din = Sh_val_2_V_2_16_fu_82;

always @ (*) begin
    ap_sig_121 = ((~(exitcond1_i_fu_221_p2 == 1'b0) & (Sh_val_0_V_0_out_full_n == 1'b0)) | (~(exitcond1_i_fu_221_p2 == 1'b0) & (Sh_val_0_V_1_out_full_n == 1'b0)) | (~(exitcond1_i_fu_221_p2 == 1'b0) & (Sh_val_0_V_2_out_full_n == 1'b0)) | (~(exitcond1_i_fu_221_p2 == 1'b0) & (Sh_val_1_V_0_out_full_n == 1'b0)) | (~(exitcond1_i_fu_221_p2 == 1'b0) & (Sh_val_1_V_1_out_full_n == 1'b0)) | (~(exitcond1_i_fu_221_p2 == 1'b0) & (Sh_val_1_V_2_out_full_n == 1'b0)) | (~(exitcond1_i_fu_221_p2 == 1'b0) & (Sh_val_2_V_0_out_full_n == 1'b0)) | (~(exitcond1_i_fu_221_p2 == 1'b0) & (Sh_val_2_V_1_out_full_n == 1'b0)) | (~(exitcond1_i_fu_221_p2 == 1'b0) & (Sh_val_2_V_2_out_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_140 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_155 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_sig_167 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_78 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign c_fu_291_p2 = (c4_i_reg_173 + ap_const_lv2_1);

assign coef_h_address0 = tmp_18_cast_fu_306_p1;

assign exitcond1_i_fu_221_p2 = ((r3_i_reg_161 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond_i_fu_285_p2 = ((c4_i_reg_173 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign newSel10_fu_585_p3 = ((or_cond2_fu_404_p2[0:0] === 1'b1) ? newSel6_fu_577_p3 : Sh_val_2_V_2_1_fu_50);

assign newSel1_fu_553_p3 = ((sel_tmp1_fu_356_p2[0:0] === 1'b1) ? Sh_val_2_V_0_cast_fu_323_p1 : Sh_val_2_V_2_4_fu_54);

assign newSel2_fu_481_p3 = ((sel_tmp10_fu_377_p2[0:0] === 1'b1) ? Sh_val_2_V_2_10_fu_66 : Sh_val_2_V_0_cast_fu_323_p1);

assign newSel3_fu_489_p3 = ((or_cond_fu_392_p2[0:0] === 1'b1) ? Sh_val_2_V_2_10_fu_66 : newSel2_fu_481_p3);

assign newSel4_fu_561_p3 = ((or_cond2_fu_404_p2[0:0] === 1'b1) ? Sh_val_2_V_2_4_fu_54 : newSel1_fu_553_p3);

assign newSel5_fu_505_p3 = ((sel_tmp10_fu_377_p2[0:0] === 1'b1) ? Sh_val_2_V_0_cast_fu_323_p1 : Sh_val_2_V_2_8_fu_62);

assign newSel6_fu_577_p3 = ((sel_tmp4_fu_361_p2[0:0] === 1'b1) ? Sh_val_2_V_2_1_fu_50 : Sh_val_2_V_0_cast_fu_323_p1);

assign newSel7_fu_521_p3 = ((sel_tmp1_fu_356_p2[0:0] === 1'b1) ? Sh_val_2_V_2_6_fu_58 : Sh_val_2_V_0_cast_fu_323_p1);

assign newSel8_fu_529_p3 = ((or_cond2_fu_404_p2[0:0] === 1'b1) ? Sh_val_2_V_2_6_fu_58 : newSel7_fu_521_p3);

assign newSel9_fu_537_p3 = ((or_cond4_fu_415_p2[0:0] === 1'b1) ? Sh_val_2_V_2_6_fu_58 : newSel8_fu_529_p3);

assign newSel_fu_465_p3 = ((sel_tmp4_fu_361_p2[0:0] === 1'b1) ? Sh_val_2_V_0_cast_fu_323_p1 : Sh_val_2_V_2_13_fu_70);

assign or_cond1_fu_398_p2 = (sel_tmp10_fu_377_p2 | sel_tmp7_fu_366_p2);

assign or_cond2_fu_404_p2 = (sel_tmp4_fu_361_p2 | tmp_5_reg_745);

assign or_cond3_fu_409_p2 = (sel_tmp1_fu_356_p2 | sel_tmp6_fu_345_p2);

assign or_cond4_fu_415_p2 = (or_cond_fu_392_p2 | or_cond1_fu_398_p2);

assign or_cond5_fu_421_p2 = (or_cond2_fu_404_p2 | or_cond3_fu_409_p2);

assign or_cond6_fu_427_p2 = (or_cond4_fu_415_p2 | or_cond5_fu_421_p2);

assign or_cond_fu_392_p2 = (sel_tmp15_fu_387_p2 | sel_tmp14_fu_382_p2);

assign p_shl_cast_fu_245_p1 = tmp_1_fu_237_p3;

assign r_fu_227_p2 = (r3_i_reg_161 + ap_const_lv2_1);

assign sel_tmp10_fu_377_p2 = (sel_tmp2_reg_719 & sel_tmp8_fu_371_p2);

assign sel_tmp11_fu_267_p2 = ((r3_i_reg_161 != ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp12_fu_273_p2 = ((r3_i_reg_161 != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp13_fu_279_p2 = (sel_tmp11_fu_267_p2 & sel_tmp12_fu_273_p2);

assign sel_tmp14_fu_382_p2 = (sel_tmp13_reg_726 & sel_tmp9_fu_350_p2);

assign sel_tmp15_fu_387_p2 = (sel_tmp13_reg_726 & sel_tmp8_fu_371_p2);

assign sel_tmp1_fu_356_p2 = (sel_tmp_reg_713 & sel_tmp9_fu_350_p2);

assign sel_tmp2_fu_261_p2 = ((r3_i_reg_161 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_327_p2 = ((c4_i_reg_173 != ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_361_p2 = (tmp_fu_339_p2 & sel_tmp2_reg_719);

assign sel_tmp5_fu_333_p2 = ((c4_i_reg_173 != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_345_p2 = (tmp_fu_339_p2 & sel_tmp_reg_713);

assign sel_tmp7_fu_366_p2 = (sel_tmp2_reg_719 & sel_tmp9_fu_350_p2);

assign sel_tmp8_fu_371_p2 = ((c4_i_reg_173 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_350_p2 = ((c4_i_reg_173 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp_fu_255_p2 = ((r3_i_reg_161 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_18_cast_fu_306_p1 = $signed(tmp_3_fu_301_p2);

assign tmp_1_fu_237_p3 = {{r3_i_reg_161}, {ap_const_lv2_0}};

assign tmp_27_i_cast_fu_233_p1 = r3_i_reg_161;

assign tmp_29_i_cast_fu_297_p1 = c4_i_reg_173;

assign tmp_2_fu_249_p2 = (p_shl_cast_fu_245_p1 - tmp_27_i_cast_fu_233_p1);

assign tmp_3_fu_301_p2 = (tmp_2_reg_708 + tmp_29_i_cast_fu_297_p1);

assign tmp_5_fu_317_p2 = ((tmp_s_fu_311_p2 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_fu_339_p2 = (sel_tmp3_fu_327_p2 & sel_tmp5_fu_333_p2);

assign tmp_s_fu_311_p2 = (r3_i_reg_161 | c4_i_reg_173);

endmodule //filter_Loop_3_proc
