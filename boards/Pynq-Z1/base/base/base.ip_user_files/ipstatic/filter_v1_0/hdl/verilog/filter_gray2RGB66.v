// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filter_gray2RGB66 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_in_data_stream_V_dout,
        img_in_data_stream_V_empty_n,
        img_in_data_stream_V_read,
        img_in_data_stream_V1_dout,
        img_in_data_stream_V1_empty_n,
        img_in_data_stream_V1_read,
        img_in_data_stream_V2_dout,
        img_in_data_stream_V2_empty_n,
        img_in_data_stream_V2_read,
        img_out_data_stream_V_din,
        img_out_data_stream_V_full_n,
        img_out_data_stream_V_write,
        img_out_data_stream_V3_din,
        img_out_data_stream_V3_full_n,
        img_out_data_stream_V3_write,
        img_out_data_stream_V4_din,
        img_out_data_stream_V4_full_n,
        img_out_data_stream_V4_write
);

parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_st3_fsm_2 = 6'b100;
parameter    ap_ST_st4_fsm_3 = 6'b1000;
parameter    ap_ST_st5_fsm_4 = 6'b10000;
parameter    ap_ST_st6_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv21_0 = 21'b000000000000000000000;
parameter    ap_const_lv10_FD = 10'b11111101;
parameter    ap_const_lv10_27 = 10'b100111;
parameter    ap_const_lv10_20 = 10'b100000;
parameter    ap_const_lv10_FB = 10'b11111011;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_3 = 4'b11;
parameter    ap_const_lv4_5 = 4'b101;
parameter    ap_const_lv4_7 = 4'b111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv21_1 = 21'b1;
parameter    ap_const_lv21_1FA3FF = 21'b111111010001111111111;
parameter    ap_const_lv17_FB = 17'b11111011;
parameter    ap_const_lv17_FD = 17'b11111101;
parameter    ap_const_lv15_27 = 15'b100111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] img_in_data_stream_V_dout;
input   img_in_data_stream_V_empty_n;
output   img_in_data_stream_V_read;
input  [7:0] img_in_data_stream_V1_dout;
input   img_in_data_stream_V1_empty_n;
output   img_in_data_stream_V1_read;
input  [7:0] img_in_data_stream_V2_dout;
input   img_in_data_stream_V2_empty_n;
output   img_in_data_stream_V2_read;
output  [7:0] img_out_data_stream_V_din;
input   img_out_data_stream_V_full_n;
output   img_out_data_stream_V_write;
output  [7:0] img_out_data_stream_V3_din;
input   img_out_data_stream_V3_full_n;
output   img_out_data_stream_V3_write;
output  [7:0] img_out_data_stream_V4_din;
input   img_out_data_stream_V4_full_n;
output   img_out_data_stream_V4_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_in_data_stream_V_read;
reg img_in_data_stream_V1_read;
reg img_in_data_stream_V2_read;
reg img_out_data_stream_V_write;
reg img_out_data_stream_V3_write;
reg img_out_data_stream_V4_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_24;
reg   [3:0] coef_array2_V_address0;
reg    coef_array2_V_ce0;
reg    coef_array2_V_we0;
reg   [9:0] coef_array2_V_d0;
reg   [3:0] coef_array2_V_address1;
reg    coef_array2_V_ce1;
reg    coef_array2_V_we1;
reg   [9:0] coef_array2_V_d1;
reg    img_in_data_stream_V_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_78;
reg    img_in_data_stream_V1_blk_n;
reg    img_in_data_stream_V2_blk_n;
reg    img_out_data_stream_V_blk_n;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_89;
reg    img_out_data_stream_V3_blk_n;
reg    img_out_data_stream_V4_blk_n;
reg   [7:0] tmp_18_reg_259;
reg    ap_sig_102;
reg   [7:0] tmp_19_reg_264;
reg   [7:0] tmp_20_reg_269;
wire   [14:0] grp_fu_251_p3;
reg   [14:0] tmp1_reg_274;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_116;
wire   [16:0] OP2_V_cast_fu_196_p1;
reg   [16:0] OP2_V_cast_reg_279;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_125;
wire   [16:0] tmp1_cast_fu_199_p1;
reg   [16:0] tmp1_cast_reg_284;
reg   [7:0] pout_val_0_reg_289;
wire   [20:0] indvar_flatten_next_fu_221_p2;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_138;
reg   [20:0] indvar_flatten_reg_168;
reg    ap_sig_72;
wire   [0:0] exitcond_flatten_fu_227_p2;
reg    ap_sig_162;
wire   [12:0] p_Val2_1_fu_182_p3;
wire   [16:0] grp_fu_242_p3;
wire   [16:0] grp_fu_235_p3;
wire   [7:0] grp_fu_235_p0;
wire   [8:0] grp_fu_235_p1;
wire   [14:0] grp_fu_235_p2;
wire   [7:0] grp_fu_242_p0;
wire   [8:0] grp_fu_242_p1;
wire   [14:0] grp_fu_242_p2;
wire   [7:0] grp_fu_251_p0;
wire   [6:0] grp_fu_251_p1;
wire   [12:0] grp_fu_251_p2;
reg   [5:0] ap_NS_fsm;
wire   [16:0] grp_fu_242_p00;
wire   [16:0] grp_fu_242_p20;
wire   [14:0] grp_fu_251_p00;
wire   [14:0] grp_fu_251_p20;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'b1;
end

filter_gray2RGB66_coef_array2_V #(
    .DataWidth( 10 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
coef_array2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(coef_array2_V_address0),
    .ce0(coef_array2_V_ce0),
    .we0(coef_array2_V_we0),
    .d0(coef_array2_V_d0),
    .address1(coef_array2_V_address1),
    .ce1(coef_array2_V_ce1),
    .we1(coef_array2_V_we1),
    .d1(coef_array2_V_d1)
);

filter_mac_muladd_8ns_9ns_15ns_17_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 17 ))
filter_mac_muladd_8ns_9ns_15ns_17_1_U39(
    .din0(grp_fu_235_p0),
    .din1(grp_fu_235_p1),
    .din2(grp_fu_235_p2),
    .dout(grp_fu_235_p3)
);

filter_mac_muladd_8ns_9ns_15ns_17_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 17 ))
filter_mac_muladd_8ns_9ns_15ns_17_1_U40(
    .din0(grp_fu_242_p0),
    .din1(grp_fu_242_p1),
    .din2(grp_fu_242_p2),
    .dout(grp_fu_242_p3)
);

filter_mac_muladd_8ns_7ns_13ns_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 15 ))
filter_mac_muladd_8ns_7ns_13ns_15_1_U41(
    .din0(grp_fu_251_p0),
    .din1(grp_fu_251_p1),
    .din2(grp_fu_251_p2),
    .dout(grp_fu_251_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(exitcond_flatten_fu_227_p2 == 1'b0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (exitcond_flatten_fu_227_p2 == 1'b0))) begin
        indvar_flatten_reg_168 <= indvar_flatten_next_fu_221_p2;
    end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_72) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(exitcond_flatten_fu_227_p2 == 1'b0)))) begin
        indvar_flatten_reg_168 <= ap_const_lv21_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        OP2_V_cast_reg_279[7 : 0] <= OP2_V_cast_fu_196_p1[7 : 0];
        pout_val_0_reg_289 <= {{grp_fu_242_p3[ap_const_lv32_F : ap_const_lv32_8]}};
        tmp1_cast_reg_284[14 : 0] <= tmp1_cast_fu_199_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tmp1_reg_274 <= grp_fu_251_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_102)) begin
        tmp_18_reg_259 <= img_in_data_stream_V_dout;
        tmp_19_reg_264 <= img_in_data_stream_V1_dout;
        tmp_20_reg_269 <= img_in_data_stream_V2_dout;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(exitcond_flatten_fu_227_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(exitcond_flatten_fu_227_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_78) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_116) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_125) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_89) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_138) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        coef_array2_V_address0 = ap_const_lv4_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        coef_array2_V_address0 = ap_const_lv4_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        coef_array2_V_address0 = ap_const_lv4_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        coef_array2_V_address0 = ap_const_lv4_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        coef_array2_V_address0 = ap_const_lv4_0;
    end else begin
        coef_array2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        coef_array2_V_address1 = ap_const_lv4_7;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        coef_array2_V_address1 = ap_const_lv4_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        coef_array2_V_address1 = ap_const_lv4_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        coef_array2_V_address1 = ap_const_lv4_1;
    end else begin
        coef_array2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_102) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_162))) begin
        coef_array2_V_ce0 = 1'b1;
    end else begin
        coef_array2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_102) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_162))) begin
        coef_array2_V_ce1 = 1'b1;
    end else begin
        coef_array2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        coef_array2_V_d0 = ap_const_lv10_FB;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        coef_array2_V_d0 = ap_const_lv10_20;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        coef_array2_V_d0 = ap_const_lv10_27;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        coef_array2_V_d0 = ap_const_lv10_FD;
    end else begin
        coef_array2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        coef_array2_V_d1 = ap_const_lv10_27;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        coef_array2_V_d1 = ap_const_lv10_FD;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        coef_array2_V_d1 = ap_const_lv10_20;
    end else begin
        coef_array2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_102) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_162))) begin
        coef_array2_V_we0 = 1'b1;
    end else begin
        coef_array2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_102) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_162))) begin
        coef_array2_V_we1 = 1'b1;
    end else begin
        coef_array2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_sig_cseq_ST_st2_fsm_1))) begin
        img_in_data_stream_V1_blk_n = img_in_data_stream_V1_empty_n;
    end else begin
        img_in_data_stream_V1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_102)) begin
        img_in_data_stream_V1_read = 1'b1;
    end else begin
        img_in_data_stream_V1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_sig_cseq_ST_st2_fsm_1))) begin
        img_in_data_stream_V2_blk_n = img_in_data_stream_V2_empty_n;
    end else begin
        img_in_data_stream_V2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_102)) begin
        img_in_data_stream_V2_read = 1'b1;
    end else begin
        img_in_data_stream_V2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_sig_cseq_ST_st2_fsm_1))) begin
        img_in_data_stream_V_blk_n = img_in_data_stream_V_empty_n;
    end else begin
        img_in_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_102)) begin
        img_in_data_stream_V_read = 1'b1;
    end else begin
        img_in_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        img_out_data_stream_V3_blk_n = img_out_data_stream_V3_full_n;
    end else begin
        img_out_data_stream_V3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_162)) begin
        img_out_data_stream_V3_write = 1'b1;
    end else begin
        img_out_data_stream_V3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        img_out_data_stream_V4_blk_n = img_out_data_stream_V4_full_n;
    end else begin
        img_out_data_stream_V4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_162)) begin
        img_out_data_stream_V4_write = 1'b1;
    end else begin
        img_out_data_stream_V4_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        img_out_data_stream_V_blk_n = img_out_data_stream_V_full_n;
    end else begin
        img_out_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~ap_sig_162)) begin
        img_out_data_stream_V_write = 1'b1;
    end else begin
        img_out_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_72) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~ap_sig_102) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            if (~ap_sig_162) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_cast_fu_196_p1 = tmp_18_reg_259;

always @ (*) begin
    ap_sig_102 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (img_in_data_stream_V_empty_n == 1'b0) | (img_in_data_stream_V1_empty_n == 1'b0) | (img_in_data_stream_V2_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_116 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_125 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_138 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_162 = ((img_out_data_stream_V_full_n == 1'b0) | (img_out_data_stream_V3_full_n == 1'b0) | (img_out_data_stream_V4_full_n == 1'b0));
end

always @ (*) begin
    ap_sig_24 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_72 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_sig_78 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_89 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

assign exitcond_flatten_fu_227_p2 = ((indvar_flatten_reg_168 == ap_const_lv21_1FA3FF) ? 1'b1 : 1'b0);

assign grp_fu_235_p0 = OP2_V_cast_reg_279;

assign grp_fu_235_p1 = ap_const_lv17_FB;

assign grp_fu_235_p2 = tmp1_cast_reg_284;

assign grp_fu_242_p0 = grp_fu_242_p00;

assign grp_fu_242_p00 = tmp_18_reg_259;

assign grp_fu_242_p1 = ap_const_lv17_FD;

assign grp_fu_242_p2 = grp_fu_242_p20;

assign grp_fu_242_p20 = tmp1_reg_274;

assign grp_fu_251_p0 = grp_fu_251_p00;

assign grp_fu_251_p00 = tmp_20_reg_269;

assign grp_fu_251_p1 = ap_const_lv15_27;

assign grp_fu_251_p2 = grp_fu_251_p20;

assign grp_fu_251_p20 = p_Val2_1_fu_182_p3;

assign img_out_data_stream_V3_din = pout_val_0_reg_289;

assign img_out_data_stream_V4_din = {{grp_fu_235_p3[ap_const_lv32_F : ap_const_lv32_8]}};

assign img_out_data_stream_V_din = pout_val_0_reg_289;

assign indvar_flatten_next_fu_221_p2 = (indvar_flatten_reg_168 + ap_const_lv21_1);

assign p_Val2_1_fu_182_p3 = {{tmp_19_reg_264}, {ap_const_lv5_0}};

assign tmp1_cast_fu_199_p1 = tmp1_reg_274;

always @ (posedge ap_clk) begin
    OP2_V_cast_reg_279[16:8] <= 9'b000000000;
    tmp1_cast_reg_284[16:15] <= 2'b00;
end

endmodule //filter_gray2RGB66
