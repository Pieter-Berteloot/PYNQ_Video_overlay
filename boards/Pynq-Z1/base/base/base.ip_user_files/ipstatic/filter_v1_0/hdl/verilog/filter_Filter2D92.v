// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filter_Filter2D92 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_rows_V_dout,
        p_src_rows_V_empty_n,
        p_src_rows_V_read,
        p_src_cols_V_dout,
        p_src_cols_V_empty_n,
        p_src_cols_V_read,
        p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write,
        anchor_x_dout,
        anchor_x_empty_n,
        anchor_x_read,
        anchor_y_dout,
        anchor_y_empty_n,
        anchor_y_read
);

parameter    ap_ST_st1_fsm_0 = 5'b1;
parameter    ap_ST_st2_fsm_1 = 5'b10;
parameter    ap_ST_st3_fsm_2 = 5'b100;
parameter    ap_ST_pp0_stg0_fsm_3 = 5'b1000;
parameter    ap_ST_st6_fsm_4 = 5'b10000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv13_2 = 13'b10;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv12_2 = 12'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] p_src_rows_V_dout;
input   p_src_rows_V_empty_n;
output   p_src_rows_V_read;
input  [11:0] p_src_cols_V_dout;
input   p_src_cols_V_empty_n;
output   p_src_cols_V_read;
input  [7:0] p_src_data_stream_0_V_dout;
input   p_src_data_stream_0_V_empty_n;
output   p_src_data_stream_0_V_read;
input  [7:0] p_src_data_stream_1_V_dout;
input   p_src_data_stream_1_V_empty_n;
output   p_src_data_stream_1_V_read;
input  [7:0] p_src_data_stream_2_V_dout;
input   p_src_data_stream_2_V_empty_n;
output   p_src_data_stream_2_V_read;
output  [7:0] p_dst_data_stream_0_V_din;
input   p_dst_data_stream_0_V_full_n;
output   p_dst_data_stream_0_V_write;
output  [7:0] p_dst_data_stream_1_V_din;
input   p_dst_data_stream_1_V_full_n;
output   p_dst_data_stream_1_V_write;
output  [7:0] p_dst_data_stream_2_V_din;
input   p_dst_data_stream_2_V_full_n;
output   p_dst_data_stream_2_V_write;
input  [0:0] anchor_x_dout;
input   anchor_x_empty_n;
output   anchor_x_read;
input  [0:0] anchor_y_dout;
input   anchor_y_empty_n;
output   anchor_y_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_rows_V_read;
reg p_src_cols_V_read;
reg p_src_data_stream_0_V_read;
reg p_src_data_stream_1_V_read;
reg p_src_data_stream_2_V_read;
reg p_dst_data_stream_0_V_write;
reg p_dst_data_stream_1_V_write;
reg p_dst_data_stream_2_V_write;
reg anchor_x_read;
reg anchor_y_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_23;
reg    p_src_rows_V_blk_n;
reg    p_src_cols_V_blk_n;
reg    p_src_data_stream_0_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_3;
reg    ap_sig_83;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg   [0:0] brmerge_i_i_reg_409;
reg    p_src_data_stream_1_V_blk_n;
reg    p_src_data_stream_2_V_blk_n;
reg    p_dst_data_stream_0_V_blk_n;
reg   [0:0] brmerge303_i_i_reg_413;
reg    p_dst_data_stream_1_V_blk_n;
reg    p_dst_data_stream_2_V_blk_n;
reg    anchor_x_blk_n;
reg    anchor_y_blk_n;
reg   [11:0] p_021_0_i_i_reg_180;
reg   [11:0] p_src_rows_V_read_reg_321;
reg    ap_sig_117;
wire   [12:0] rows_cast_i_fu_191_p1;
reg   [12:0] rows_cast_i_reg_326;
reg   [11:0] p_src_cols_V_read_reg_331;
wire   [12:0] cols_cast_i_fu_195_p1;
reg   [12:0] cols_cast_i_reg_336;
reg   [0:0] anchor_x_read_reg_341;
reg   [0:0] anchor_y_read_reg_347;
wire   [1:0] tmp_1_i_fu_199_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_137;
wire   [11:0] start_row_cast_i_cast_cast_fu_218_p3;
reg   [11:0] start_row_cast_i_cast_cast_reg_361;
wire   [0:0] tmp_2_i_fu_205_p2;
wire   [11:0] start_col_cast_i_cast_cast_fu_232_p3;
reg   [11:0] start_col_cast_i_cast_cast_reg_366;
wire   [12:0] heightloop_fu_239_p2;
reg   [12:0] heightloop_reg_371;
wire   [12:0] widthloop_fu_244_p2;
reg   [12:0] widthloop_reg_376;
wire   [0:0] tmp_12_i_fu_253_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_158;
wire   [11:0] i_V_fu_258_p2;
reg   [11:0] i_V_reg_385;
wire   [0:0] tmp_15_i_fu_264_p2;
reg   [0:0] tmp_15_i_reg_390;
wire   [0:0] rev5_fu_274_p2;
reg   [0:0] rev5_reg_395;
wire   [0:0] tmp_16_i_fu_284_p2;
reg    ap_sig_188;
wire   [11:0] j_V_fu_289_p2;
wire   [0:0] brmerge_i_i_fu_311_p2;
wire   [0:0] brmerge303_i_i_fu_316_p2;
reg   [1:0] tmp_9_i_reg_158;
reg   [11:0] p_08_0_i_i_reg_169;
reg    ap_sig_cseq_ST_st6_fsm_4;
reg    ap_sig_215;
wire   [12:0] start_row_cast_i_cast2_cast_fu_211_p3;
wire   [12:0] start_col_cast_i_cast1_cast_fu_225_p3;
wire   [12:0] tmp_11_cast_i_cast_fu_249_p1;
wire   [0:0] ult_fu_269_p2;
wire   [12:0] col_assign_cast_i_cast_fu_280_p1;
wire   [0:0] ult6_fu_300_p2;
wire   [0:0] rev7_fu_305_p2;
wire   [0:0] tmp_19_i_fu_295_p2;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == tmp_12_i_fu_253_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188) & (1'b0 == tmp_16_i_fu_284_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == tmp_12_i_fu_253_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188) & ~(1'b0 == tmp_16_i_fu_284_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == tmp_12_i_fu_253_p2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188) & (1'b0 == tmp_16_i_fu_284_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188) & ~(1'b0 == tmp_16_i_fu_284_p2))) begin
        p_021_0_i_i_reg_180 <= j_V_fu_289_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == tmp_12_i_fu_253_p2))) begin
        p_021_0_i_i_reg_180 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_4)) begin
        p_08_0_i_i_reg_169 <= i_V_reg_385;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == tmp_2_i_fu_205_p2))) begin
        p_08_0_i_i_reg_169 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_117)) begin
        tmp_9_i_reg_158 <= ap_const_lv2_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_2_i_fu_205_p2))) begin
        tmp_9_i_reg_158 <= tmp_1_i_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_117)) begin
        anchor_x_read_reg_341 <= anchor_x_dout;
        anchor_y_read_reg_347 <= anchor_y_dout;
        cols_cast_i_reg_336[11 : 0] <= cols_cast_i_fu_195_p1[11 : 0];
        p_src_cols_V_read_reg_331 <= p_src_cols_V_dout;
        p_src_rows_V_read_reg_321 <= p_src_rows_V_dout;
        rows_cast_i_reg_326[11 : 0] <= rows_cast_i_fu_191_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188) & ~(1'b0 == tmp_16_i_fu_284_p2))) begin
        brmerge303_i_i_reg_413 <= brmerge303_i_i_fu_316_p2;
        brmerge_i_i_reg_409 <= brmerge_i_i_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == tmp_2_i_fu_205_p2))) begin
        heightloop_reg_371 <= heightloop_fu_239_p2;
        start_col_cast_i_cast_cast_reg_366[1 : 0] <= start_col_cast_i_cast_cast_fu_232_p3[1 : 0];
        start_row_cast_i_cast_cast_reg_361[1 : 0] <= start_row_cast_i_cast_cast_fu_218_p3[1 : 0];
        widthloop_reg_376 <= widthloop_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_V_reg_385 <= i_V_fu_258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == tmp_12_i_fu_253_p2))) begin
        rev5_reg_395 <= rev5_fu_274_p2;
        tmp_15_i_reg_390 <= tmp_15_i_fu_264_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        anchor_x_blk_n = anchor_x_empty_n;
    end else begin
        anchor_x_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_117)) begin
        anchor_x_read = 1'b1;
    end else begin
        anchor_x_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        anchor_y_blk_n = anchor_y_empty_n;
    end else begin
        anchor_y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_117)) begin
        anchor_y_read = 1'b1;
    end else begin
        anchor_y_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == tmp_12_i_fu_253_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == tmp_12_i_fu_253_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_83) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_137) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_158) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_215) begin
        ap_sig_cseq_ST_st6_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == brmerge303_i_i_reg_413))) begin
        p_dst_data_stream_0_V_blk_n = p_dst_data_stream_0_V_full_n;
    end else begin
        p_dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == brmerge303_i_i_reg_413) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188))) begin
        p_dst_data_stream_0_V_write = 1'b1;
    end else begin
        p_dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == brmerge303_i_i_reg_413))) begin
        p_dst_data_stream_1_V_blk_n = p_dst_data_stream_1_V_full_n;
    end else begin
        p_dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == brmerge303_i_i_reg_413) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188))) begin
        p_dst_data_stream_1_V_write = 1'b1;
    end else begin
        p_dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == brmerge303_i_i_reg_413))) begin
        p_dst_data_stream_2_V_blk_n = p_dst_data_stream_2_V_full_n;
    end else begin
        p_dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == brmerge303_i_i_reg_413) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188))) begin
        p_dst_data_stream_2_V_write = 1'b1;
    end else begin
        p_dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        p_src_cols_V_blk_n = p_src_cols_V_empty_n;
    end else begin
        p_src_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_117)) begin
        p_src_cols_V_read = 1'b1;
    end else begin
        p_src_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (brmerge_i_i_reg_409 == 1'b0))) begin
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n;
    end else begin
        p_src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (brmerge_i_i_reg_409 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188))) begin
        p_src_data_stream_0_V_read = 1'b1;
    end else begin
        p_src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (brmerge_i_i_reg_409 == 1'b0))) begin
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n;
    end else begin
        p_src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (brmerge_i_i_reg_409 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188))) begin
        p_src_data_stream_1_V_read = 1'b1;
    end else begin
        p_src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (brmerge_i_i_reg_409 == 1'b0))) begin
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n;
    end else begin
        p_src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (brmerge_i_i_reg_409 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188))) begin
        p_src_data_stream_2_V_read = 1'b1;
    end else begin
        p_src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        p_src_rows_V_blk_n = p_src_rows_V_empty_n;
    end else begin
        p_src_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_117)) begin
        p_src_rows_V_read = 1'b1;
    end else begin
        p_src_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_117) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == tmp_2_i_fu_205_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((1'b0 == tmp_12_i_fu_253_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end
        end
        ap_ST_pp0_stg0_fsm_3 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188) & (1'b0 == tmp_16_i_fu_284_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_188) & (1'b0 == tmp_16_i_fu_284_p2))) begin
                ap_NS_fsm = ap_ST_st6_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end
        end
        ap_ST_st6_fsm_4 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_117 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (p_src_rows_V_empty_n == 1'b0) | (p_src_cols_V_empty_n == 1'b0) | (anchor_x_empty_n == 1'b0) | (anchor_y_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_137 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_158 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_188 = (((brmerge_i_i_reg_409 == 1'b0) & (p_src_data_stream_0_V_empty_n == 1'b0)) | ((1'b0 == brmerge303_i_i_reg_413) & (p_dst_data_stream_0_V_full_n == 1'b0)) | ((brmerge_i_i_reg_409 == 1'b0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((1'b0 == brmerge303_i_i_reg_413) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((brmerge_i_i_reg_409 == 1'b0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((1'b0 == brmerge303_i_i_reg_413) & (p_dst_data_stream_2_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_215 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_23 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_83 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

assign brmerge303_i_i_fu_316_p2 = (tmp_15_i_reg_390 | tmp_19_i_fu_295_p2);

assign brmerge_i_i_fu_311_p2 = (rev7_fu_305_p2 | rev5_reg_395);

assign col_assign_cast_i_cast_fu_280_p1 = p_021_0_i_i_reg_180;

assign cols_cast_i_fu_195_p1 = p_src_cols_V_dout;

assign heightloop_fu_239_p2 = (start_row_cast_i_cast2_cast_fu_211_p3 + rows_cast_i_reg_326);

assign i_V_fu_258_p2 = (p_08_0_i_i_reg_169 + ap_const_lv12_1);

assign j_V_fu_289_p2 = (p_021_0_i_i_reg_180 + ap_const_lv12_1);

assign p_dst_data_stream_0_V_din = ap_const_lv8_0;

assign p_dst_data_stream_1_V_din = ap_const_lv8_0;

assign p_dst_data_stream_2_V_din = ap_const_lv8_0;

assign rev5_fu_274_p2 = (ult_fu_269_p2 ^ 1'b1);

assign rev7_fu_305_p2 = (ult6_fu_300_p2 ^ 1'b1);

assign rows_cast_i_fu_191_p1 = p_src_rows_V_dout;

assign start_col_cast_i_cast1_cast_fu_225_p3 = ((anchor_x_read_reg_341[0:0] === 1'b1) ? ap_const_lv13_1 : ap_const_lv13_2);

assign start_col_cast_i_cast_cast_fu_232_p3 = ((anchor_x_read_reg_341[0:0] === 1'b1) ? ap_const_lv12_1 : ap_const_lv12_2);

assign start_row_cast_i_cast2_cast_fu_211_p3 = ((anchor_y_read_reg_347[0:0] === 1'b1) ? ap_const_lv13_1 : ap_const_lv13_2);

assign start_row_cast_i_cast_cast_fu_218_p3 = ((anchor_y_read_reg_347[0:0] === 1'b1) ? ap_const_lv12_1 : ap_const_lv12_2);

assign tmp_11_cast_i_cast_fu_249_p1 = p_08_0_i_i_reg_169;

assign tmp_12_i_fu_253_p2 = ((tmp_11_cast_i_cast_fu_249_p1 < heightloop_reg_371) ? 1'b1 : 1'b0);

assign tmp_15_i_fu_264_p2 = ((p_08_0_i_i_reg_169 < start_row_cast_i_cast_cast_reg_361) ? 1'b1 : 1'b0);

assign tmp_16_i_fu_284_p2 = ((col_assign_cast_i_cast_fu_280_p1 < widthloop_reg_376) ? 1'b1 : 1'b0);

assign tmp_19_i_fu_295_p2 = ((p_021_0_i_i_reg_180 < start_col_cast_i_cast_cast_reg_366) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_199_p2 = (tmp_9_i_reg_158 + ap_const_lv2_1);

assign tmp_2_i_fu_205_p2 = ((tmp_9_i_reg_158 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign ult6_fu_300_p2 = ((p_021_0_i_i_reg_180 < p_src_cols_V_read_reg_331) ? 1'b1 : 1'b0);

assign ult_fu_269_p2 = ((p_08_0_i_i_reg_169 < p_src_rows_V_read_reg_321) ? 1'b1 : 1'b0);

assign widthloop_fu_244_p2 = (start_col_cast_i_cast1_cast_fu_225_p3 + cols_cast_i_reg_336);

always @ (posedge ap_clk) begin
    rows_cast_i_reg_326[12] <= 1'b0;
    cols_cast_i_reg_336[12] <= 1'b0;
    start_row_cast_i_cast_cast_reg_361[11:2] <= 10'b0000000000;
    start_col_cast_i_cast_cast_reg_366[11:2] <= 10'b0000000000;
end

endmodule //filter_Filter2D92
