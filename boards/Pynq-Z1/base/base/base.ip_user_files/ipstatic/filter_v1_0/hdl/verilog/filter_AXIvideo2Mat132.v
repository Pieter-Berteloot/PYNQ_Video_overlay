// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filter_AXIvideo2Mat132 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_r_TDATA,
        input_r_TVALID,
        input_r_TREADY,
        input_r_TKEEP,
        input_r_TSTRB,
        input_r_TUSER,
        input_r_TLAST,
        input_r_TID,
        input_r_TDEST,
        img_data_stream_0_V_din,
        img_data_stream_0_V_full_n,
        img_data_stream_0_V_write,
        img_data_stream_1_V_din,
        img_data_stream_1_V_full_n,
        img_data_stream_1_V_write,
        img_data_stream_2_V_din,
        img_data_stream_2_V_full_n,
        img_data_stream_2_V_write,
        mode2,
        mode1,
        mode,
        modeOriginal,
        index,
        index2,
        index3,
        mode2_out_din,
        mode2_out_full_n,
        mode2_out_write,
        mode1_out_din,
        mode1_out_full_n,
        mode1_out_write,
        mode_out_din,
        mode_out_full_n,
        mode_out_write,
        modeOriginal_out_din,
        modeOriginal_out_full_n,
        modeOriginal_out_write,
        index_out_din,
        index_out_full_n,
        index_out_write,
        index2_out_din,
        index2_out_full_n,
        index2_out_write,
        index3_out_din,
        index3_out_full_n,
        index3_out_write
);

parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_pp1_stg0_fsm_4 = 7'b10000;
parameter    ap_ST_pp2_stg0_fsm_5 = 7'b100000;
parameter    ap_ST_st9_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv11_438 = 11'b10000111000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv11_780 = 11'b11110000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_17 = 32'b10111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] input_r_TDATA;
input   input_r_TVALID;
output   input_r_TREADY;
input  [2:0] input_r_TKEEP;
input  [2:0] input_r_TSTRB;
input  [0:0] input_r_TUSER;
input  [0:0] input_r_TLAST;
input  [0:0] input_r_TID;
input  [0:0] input_r_TDEST;
output  [7:0] img_data_stream_0_V_din;
input   img_data_stream_0_V_full_n;
output   img_data_stream_0_V_write;
output  [7:0] img_data_stream_1_V_din;
input   img_data_stream_1_V_full_n;
output   img_data_stream_1_V_write;
output  [7:0] img_data_stream_2_V_din;
input   img_data_stream_2_V_full_n;
output   img_data_stream_2_V_write;
input  [7:0] mode2;
input  [7:0] mode1;
input  [7:0] mode;
input  [7:0] modeOriginal;
input  [31:0] index;
input  [31:0] index2;
input  [31:0] index3;
output  [7:0] mode2_out_din;
input   mode2_out_full_n;
output   mode2_out_write;
output  [7:0] mode1_out_din;
input   mode1_out_full_n;
output   mode1_out_write;
output  [7:0] mode_out_din;
input   mode_out_full_n;
output   mode_out_write;
output  [7:0] modeOriginal_out_din;
input   modeOriginal_out_full_n;
output   modeOriginal_out_write;
output  [31:0] index_out_din;
input   index_out_full_n;
output   index_out_write;
output  [31:0] index2_out_din;
input   index2_out_full_n;
output   index2_out_write;
output  [31:0] index3_out_din;
input   index3_out_full_n;
output   index3_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_data_stream_0_V_write;
reg img_data_stream_1_V_write;
reg img_data_stream_2_V_write;
reg mode2_out_write;
reg mode1_out_write;
reg mode_out_write;
reg modeOriginal_out_write;
reg index_out_write;
reg index2_out_write;
reg index3_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_25;
reg   [23:0] AXI_video_strm_V_data_V_0_data_out;
wire    AXI_video_strm_V_data_V_0_vld_in;
wire    AXI_video_strm_V_data_V_0_vld_out;
reg    AXI_video_strm_V_data_V_0_ack_out;
reg   [23:0] AXI_video_strm_V_data_V_0_data_reg;
reg    AXI_video_strm_V_data_V_0_areset_d;
reg    AXI_video_strm_V_data_V_0_in_rdy;
reg    AXI_video_strm_V_data_V_0_has_vld_data_reg_i;
reg    AXI_video_strm_V_data_V_0_has_vld_data_reg;
wire    AXI_video_strm_V_keep_V_0_vld_in;
reg    AXI_video_strm_V_keep_V_0_ack_out;
reg    AXI_video_strm_V_keep_V_0_in_rdy;
reg    AXI_video_strm_V_keep_V_0_has_vld_data_reg_i;
reg    AXI_video_strm_V_keep_V_0_has_vld_data_reg;
wire    AXI_video_strm_V_strb_V_0_vld_in;
reg    AXI_video_strm_V_strb_V_0_ack_out;
reg    AXI_video_strm_V_strb_V_0_in_rdy;
reg    AXI_video_strm_V_strb_V_0_has_vld_data_reg_i;
reg    AXI_video_strm_V_strb_V_0_has_vld_data_reg;
reg   [0:0] AXI_video_strm_V_user_V_0_data_out;
wire    AXI_video_strm_V_user_V_0_vld_in;
reg    AXI_video_strm_V_user_V_0_ack_out;
reg   [0:0] AXI_video_strm_V_user_V_0_data_reg;
reg    AXI_video_strm_V_user_V_0_in_rdy;
reg    AXI_video_strm_V_user_V_0_has_vld_data_reg_i;
reg    AXI_video_strm_V_user_V_0_has_vld_data_reg;
reg   [0:0] AXI_video_strm_V_last_V_0_data_out;
wire    AXI_video_strm_V_last_V_0_vld_in;
reg    AXI_video_strm_V_last_V_0_ack_out;
reg   [0:0] AXI_video_strm_V_last_V_0_data_reg;
reg    AXI_video_strm_V_last_V_0_in_rdy;
reg    AXI_video_strm_V_last_V_0_has_vld_data_reg_i;
reg    AXI_video_strm_V_last_V_0_has_vld_data_reg;
wire    AXI_video_strm_V_id_V_0_vld_in;
reg    AXI_video_strm_V_id_V_0_ack_out;
reg    AXI_video_strm_V_id_V_0_in_rdy;
reg    AXI_video_strm_V_id_V_0_has_vld_data_reg_i;
reg    AXI_video_strm_V_id_V_0_has_vld_data_reg;
wire    AXI_video_strm_V_dest_V_0_vld_in;
reg    AXI_video_strm_V_dest_V_0_ack_out;
reg    AXI_video_strm_V_dest_V_0_in_rdy;
reg    AXI_video_strm_V_dest_V_0_has_vld_data_reg_i;
reg    AXI_video_strm_V_dest_V_0_has_vld_data_reg;
reg    input_r_TDATA_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_311;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_4;
reg    ap_sig_318;
reg    ap_reg_ppiten_pp1_it0;
reg    ap_reg_ppiten_pp1_it1;
wire   [0:0] exitcond4_i_i_fu_444_p2;
wire   [0:0] brmerge_i_i_fu_459_p2;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_5;
reg    ap_sig_338;
reg    ap_reg_ppiten_pp2_it0;
reg    ap_reg_ppiten_pp2_it1;
reg   [0:0] eol_2_i_i_phi_fu_369_p4;
reg    img_data_stream_0_V_blk_n;
reg   [0:0] exitcond4_i_i_reg_526;
reg    img_data_stream_1_V_blk_n;
reg    img_data_stream_2_V_blk_n;
reg    mode2_out_blk_n;
reg    mode1_out_blk_n;
reg    mode_out_blk_n;
reg    modeOriginal_out_blk_n;
reg    index_out_blk_n;
reg    index2_out_blk_n;
reg    index3_out_blk_n;
reg   [10:0] p_6_i_i_reg_296;
reg   [0:0] eol_i_i_reg_307;
reg   [0:0] eol_reg_319;
reg   [23:0] axi_data_V_1_i_i_reg_330;
reg   [0:0] eol_2_i_i_reg_366;
reg   [0:0] axi_last_V_3_i_i_reg_377;
reg   [23:0] axi_data_V_3_i_i_reg_389;
reg   [23:0] reg_401_0;
reg   [0:0] reg_401_4;
reg    ap_sig_404;
reg    ap_sig_414;
reg    ap_sig_421;
reg   [23:0] tmp_data_V_reg_497;
reg   [0:0] tmp_last_V_reg_505;
wire   [0:0] exitcond3_i_i_fu_432_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_440;
wire   [10:0] i_V_fu_438_p2;
reg   [10:0] i_V_reg_521;
wire   [10:0] j_V_fu_450_p2;
reg   [0:0] brmerge_i_i_reg_535;
reg   [0:0] axi_last_V1_i_i_reg_265;
reg    ap_sig_cseq_ST_st9_fsm_6;
reg    ap_sig_474;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_481;
reg   [23:0] axi_data_V1_i_i_reg_275;
reg   [10:0] p_i_i_reg_285;
reg   [0:0] eol_i_i_phi_fu_311_p4;
reg   [0:0] axi_last_V_2_i_i_phi_fu_346_p4;
reg   [23:0] p_Val2_s_phi_fu_358_p4;
wire   [0:0] ap_reg_phiprechg_axi_last_V_2_i_i_reg_341pp1_it1;
wire   [23:0] ap_reg_phiprechg_p_Val2_s_reg_354pp1_it1;
reg    ap_sig_525;
reg   [0:0] sof_1_i_i_fu_124;
wire   [0:0] tmp_user_V_fu_419_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_sig_354;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'b1;
#0 AXI_video_strm_V_data_V_0_in_rdy = 1'b0;
#0 AXI_video_strm_V_data_V_0_has_vld_data_reg = 1'b0;
#0 AXI_video_strm_V_keep_V_0_in_rdy = 1'b0;
#0 AXI_video_strm_V_keep_V_0_has_vld_data_reg = 1'b0;
#0 AXI_video_strm_V_strb_V_0_in_rdy = 1'b0;
#0 AXI_video_strm_V_strb_V_0_has_vld_data_reg = 1'b0;
#0 AXI_video_strm_V_user_V_0_in_rdy = 1'b0;
#0 AXI_video_strm_V_user_V_0_has_vld_data_reg = 1'b0;
#0 AXI_video_strm_V_last_V_0_in_rdy = 1'b0;
#0 AXI_video_strm_V_last_V_0_has_vld_data_reg = 1'b0;
#0 AXI_video_strm_V_id_V_0_in_rdy = 1'b0;
#0 AXI_video_strm_V_id_V_0_has_vld_data_reg = 1'b0;
#0 AXI_video_strm_V_dest_V_0_in_rdy = 1'b0;
#0 AXI_video_strm_V_dest_V_0_has_vld_data_reg = 1'b0;
#0 ap_reg_ppiten_pp1_it0 = 1'b0;
#0 ap_reg_ppiten_pp1_it1 = 1'b0;
#0 ap_reg_ppiten_pp2_it0 = 1'b0;
#0 ap_reg_ppiten_pp2_it1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        AXI_video_strm_V_data_V_0_has_vld_data_reg <= AXI_video_strm_V_data_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_0_in_rdy <= 1'b0;
    end else begin
        AXI_video_strm_V_data_V_0_in_rdy <= (AXI_video_strm_V_data_V_0_ack_out | ~AXI_video_strm_V_data_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        AXI_video_strm_V_dest_V_0_has_vld_data_reg <= AXI_video_strm_V_dest_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_0_in_rdy <= 1'b0;
    end else begin
        AXI_video_strm_V_dest_V_0_in_rdy <= (AXI_video_strm_V_dest_V_0_ack_out | ~AXI_video_strm_V_dest_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        AXI_video_strm_V_id_V_0_has_vld_data_reg <= AXI_video_strm_V_id_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_0_in_rdy <= 1'b0;
    end else begin
        AXI_video_strm_V_id_V_0_in_rdy <= (AXI_video_strm_V_id_V_0_ack_out | ~AXI_video_strm_V_id_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        AXI_video_strm_V_keep_V_0_has_vld_data_reg <= AXI_video_strm_V_keep_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_0_in_rdy <= 1'b0;
    end else begin
        AXI_video_strm_V_keep_V_0_in_rdy <= (AXI_video_strm_V_keep_V_0_ack_out | ~AXI_video_strm_V_keep_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        AXI_video_strm_V_last_V_0_has_vld_data_reg <= AXI_video_strm_V_last_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_0_in_rdy <= 1'b0;
    end else begin
        AXI_video_strm_V_last_V_0_in_rdy <= (AXI_video_strm_V_last_V_0_ack_out | ~AXI_video_strm_V_last_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        AXI_video_strm_V_strb_V_0_has_vld_data_reg <= AXI_video_strm_V_strb_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_0_in_rdy <= 1'b0;
    end else begin
        AXI_video_strm_V_strb_V_0_in_rdy <= (AXI_video_strm_V_strb_V_0_ack_out | ~AXI_video_strm_V_strb_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        AXI_video_strm_V_user_V_0_has_vld_data_reg <= AXI_video_strm_V_user_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_0_in_rdy <= 1'b0;
    end else begin
        AXI_video_strm_V_user_V_0_in_rdy <= (AXI_video_strm_V_user_V_0_ack_out | ~AXI_video_strm_V_user_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond3_i_i_fu_432_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)) & ~(exitcond4_i_i_fu_444_p2 == 1'b0))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond3_i_i_fu_432_p2))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_reg_ppiten_pp1_it0;
        end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond3_i_i_fu_432_p2))) begin
            ap_reg_ppiten_pp1_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421) & ~(1'b0 == eol_2_i_i_phi_fu_369_p4))) begin
            ap_reg_ppiten_pp2_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)) & ~(1'b0 == exitcond4_i_i_reg_526))) begin
            ap_reg_ppiten_pp2_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421))) begin
            ap_reg_ppiten_pp2_it1 <= ap_reg_ppiten_pp2_it0;
        end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)) & ~(1'b0 == exitcond4_i_i_reg_526))) begin
            ap_reg_ppiten_pp2_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_data_V1_i_i_reg_275 <= tmp_data_V_reg_497;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_6)) begin
        axi_data_V1_i_i_reg_275 <= axi_data_V_3_i_i_reg_389;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        axi_data_V_1_i_i_reg_330 <= p_Val2_s_phi_fu_358_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond3_i_i_fu_432_p2))) begin
        axi_data_V_1_i_i_reg_330 <= axi_data_V1_i_i_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)) & ~(1'b0 == exitcond4_i_i_reg_526))) begin
        axi_data_V_3_i_i_reg_389 <= axi_data_V_1_i_i_reg_330;
    end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it1) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421) & (1'b0 == eol_2_i_i_reg_366))) begin
        axi_data_V_3_i_i_reg_389 <= reg_401_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_last_V1_i_i_reg_265 <= tmp_last_V_reg_505;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_6)) begin
        axi_last_V1_i_i_reg_265 <= axi_last_V_3_i_i_reg_377;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)) & ~(1'b0 == exitcond4_i_i_reg_526))) begin
        axi_last_V_3_i_i_reg_377 <= eol_reg_319;
    end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it1) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421) & (1'b0 == eol_2_i_i_reg_366))) begin
        axi_last_V_3_i_i_reg_377 <= reg_401_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)) & ~(1'b0 == exitcond4_i_i_reg_526))) begin
        eol_2_i_i_reg_366 <= eol_i_i_reg_307;
    end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it1) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421) & (1'b0 == eol_2_i_i_reg_366))) begin
        eol_2_i_i_reg_366 <= reg_401_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        eol_i_i_reg_307 <= axi_last_V_2_i_i_phi_fu_346_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond3_i_i_fu_432_p2))) begin
        eol_i_i_reg_307 <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        eol_reg_319 <= axi_last_V_2_i_i_phi_fu_346_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond3_i_i_fu_432_p2))) begin
        eol_reg_319 <= axi_last_V1_i_i_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        p_6_i_i_reg_296 <= j_V_fu_450_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond3_i_i_fu_432_p2))) begin
        p_6_i_i_reg_296 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        p_i_i_reg_285 <= ap_const_lv11_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_6)) begin
        p_i_i_reg_285 <= i_V_reg_521;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        sof_1_i_i_fu_124 <= 1'b0;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        sof_1_i_i_fu_124 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        AXI_video_strm_V_data_V_0_areset_d <= ap_rst;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == AXI_video_strm_V_data_V_0_vld_in) & (1'b1 == AXI_video_strm_V_data_V_0_in_rdy))) begin
        AXI_video_strm_V_data_V_0_data_reg <= input_r_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == AXI_video_strm_V_last_V_0_vld_in) & (1'b1 == AXI_video_strm_V_last_V_0_in_rdy))) begin
        AXI_video_strm_V_last_V_0_data_reg <= input_r_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == AXI_video_strm_V_user_V_0_vld_in) & (1'b1 == AXI_video_strm_V_user_V_0_in_rdy))) begin
        AXI_video_strm_V_user_V_0_data_reg <= input_r_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond4_i_i_fu_444_p2 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        brmerge_i_i_reg_535 <= brmerge_i_i_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        exitcond4_i_i_reg_526 <= exitcond4_i_i_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_V_reg_521 <= i_V_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414))) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == eol_2_i_i_phi_fu_369_p4) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421)))) begin
        reg_401_0 <= AXI_video_strm_V_data_V_0_data_out;
        reg_401_4 <= AXI_video_strm_V_last_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0))) begin
        tmp_data_V_reg_497 <= AXI_video_strm_V_data_V_0_data_out;
        tmp_last_V_reg_505 <= AXI_video_strm_V_last_V_0_data_out;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414))) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == eol_2_i_i_phi_fu_369_p4) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)))) begin
        AXI_video_strm_V_data_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_data_V_0_has_vld_data_reg)) begin
        AXI_video_strm_V_data_V_0_data_out = AXI_video_strm_V_data_V_0_data_reg;
    end else begin
        AXI_video_strm_V_data_V_0_data_out = input_r_TDATA;
    end
end

always @ (*) begin
    if (((1'b1 == AXI_video_strm_V_data_V_0_vld_in) & (1'b0 == AXI_video_strm_V_data_V_0_ack_out) & (1'b1 == AXI_video_strm_V_data_V_0_in_rdy))) begin
        AXI_video_strm_V_data_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == AXI_video_strm_V_data_V_0_ack_out) & (1'b1 == AXI_video_strm_V_data_V_0_has_vld_data_reg) & ((1'b0 == AXI_video_strm_V_data_V_0_vld_in) | (1'b0 == AXI_video_strm_V_data_V_0_in_rdy)))) begin
        AXI_video_strm_V_data_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        AXI_video_strm_V_data_V_0_has_vld_data_reg_i = AXI_video_strm_V_data_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414))) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == eol_2_i_i_phi_fu_369_p4) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)))) begin
        AXI_video_strm_V_dest_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == AXI_video_strm_V_dest_V_0_vld_in) & (1'b0 == AXI_video_strm_V_dest_V_0_ack_out) & (1'b1 == AXI_video_strm_V_dest_V_0_in_rdy))) begin
        AXI_video_strm_V_dest_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == AXI_video_strm_V_dest_V_0_ack_out) & (1'b1 == AXI_video_strm_V_dest_V_0_has_vld_data_reg) & ((1'b0 == AXI_video_strm_V_dest_V_0_vld_in) | (1'b0 == AXI_video_strm_V_dest_V_0_in_rdy)))) begin
        AXI_video_strm_V_dest_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        AXI_video_strm_V_dest_V_0_has_vld_data_reg_i = AXI_video_strm_V_dest_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414))) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == eol_2_i_i_phi_fu_369_p4) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)))) begin
        AXI_video_strm_V_id_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_id_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == AXI_video_strm_V_id_V_0_vld_in) & (1'b0 == AXI_video_strm_V_id_V_0_ack_out) & (1'b1 == AXI_video_strm_V_id_V_0_in_rdy))) begin
        AXI_video_strm_V_id_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == AXI_video_strm_V_id_V_0_ack_out) & (1'b1 == AXI_video_strm_V_id_V_0_has_vld_data_reg) & ((1'b0 == AXI_video_strm_V_id_V_0_vld_in) | (1'b0 == AXI_video_strm_V_id_V_0_in_rdy)))) begin
        AXI_video_strm_V_id_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        AXI_video_strm_V_id_V_0_has_vld_data_reg_i = AXI_video_strm_V_id_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414))) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == eol_2_i_i_phi_fu_369_p4) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)))) begin
        AXI_video_strm_V_keep_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_keep_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == AXI_video_strm_V_keep_V_0_vld_in) & (1'b0 == AXI_video_strm_V_keep_V_0_ack_out) & (1'b1 == AXI_video_strm_V_keep_V_0_in_rdy))) begin
        AXI_video_strm_V_keep_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == AXI_video_strm_V_keep_V_0_ack_out) & (1'b1 == AXI_video_strm_V_keep_V_0_has_vld_data_reg) & ((1'b0 == AXI_video_strm_V_keep_V_0_vld_in) | (1'b0 == AXI_video_strm_V_keep_V_0_in_rdy)))) begin
        AXI_video_strm_V_keep_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        AXI_video_strm_V_keep_V_0_has_vld_data_reg_i = AXI_video_strm_V_keep_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414))) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == eol_2_i_i_phi_fu_369_p4) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)))) begin
        AXI_video_strm_V_last_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_last_V_0_has_vld_data_reg)) begin
        AXI_video_strm_V_last_V_0_data_out = AXI_video_strm_V_last_V_0_data_reg;
    end else begin
        AXI_video_strm_V_last_V_0_data_out = input_r_TLAST;
    end
end

always @ (*) begin
    if (((1'b1 == AXI_video_strm_V_last_V_0_vld_in) & (1'b0 == AXI_video_strm_V_last_V_0_ack_out) & (1'b1 == AXI_video_strm_V_last_V_0_in_rdy))) begin
        AXI_video_strm_V_last_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == AXI_video_strm_V_last_V_0_ack_out) & (1'b1 == AXI_video_strm_V_last_V_0_has_vld_data_reg) & ((1'b0 == AXI_video_strm_V_last_V_0_vld_in) | (1'b0 == AXI_video_strm_V_last_V_0_in_rdy)))) begin
        AXI_video_strm_V_last_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        AXI_video_strm_V_last_V_0_has_vld_data_reg_i = AXI_video_strm_V_last_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414))) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == eol_2_i_i_phi_fu_369_p4) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)))) begin
        AXI_video_strm_V_strb_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_strb_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == AXI_video_strm_V_strb_V_0_vld_in) & (1'b0 == AXI_video_strm_V_strb_V_0_ack_out) & (1'b1 == AXI_video_strm_V_strb_V_0_in_rdy))) begin
        AXI_video_strm_V_strb_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == AXI_video_strm_V_strb_V_0_ack_out) & (1'b1 == AXI_video_strm_V_strb_V_0_has_vld_data_reg) & ((1'b0 == AXI_video_strm_V_strb_V_0_vld_in) | (1'b0 == AXI_video_strm_V_strb_V_0_in_rdy)))) begin
        AXI_video_strm_V_strb_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        AXI_video_strm_V_strb_V_0_has_vld_data_reg_i = AXI_video_strm_V_strb_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414))) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == eol_2_i_i_phi_fu_369_p4) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(AXI_video_strm_V_data_V_0_vld_out == 1'b0)))) begin
        AXI_video_strm_V_user_V_0_ack_out = 1'b1;
    end else begin
        AXI_video_strm_V_user_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == AXI_video_strm_V_user_V_0_has_vld_data_reg)) begin
        AXI_video_strm_V_user_V_0_data_out = AXI_video_strm_V_user_V_0_data_reg;
    end else begin
        AXI_video_strm_V_user_V_0_data_out = input_r_TUSER;
    end
end

always @ (*) begin
    if (((1'b1 == AXI_video_strm_V_user_V_0_vld_in) & (1'b0 == AXI_video_strm_V_user_V_0_ack_out) & (1'b1 == AXI_video_strm_V_user_V_0_in_rdy))) begin
        AXI_video_strm_V_user_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == AXI_video_strm_V_user_V_0_ack_out) & (1'b1 == AXI_video_strm_V_user_V_0_has_vld_data_reg) & ((1'b0 == AXI_video_strm_V_user_V_0_vld_in) | (1'b0 == AXI_video_strm_V_user_V_0_in_rdy)))) begin
        AXI_video_strm_V_user_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        AXI_video_strm_V_user_V_0_has_vld_data_reg_i = AXI_video_strm_V_user_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond3_i_i_fu_432_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond3_i_i_fu_432_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_318) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_338) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_311) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_481) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_440) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_474) begin
        ap_sig_cseq_ST_st9_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_354) begin
        if (~(1'b0 == brmerge_i_i_reg_535)) begin
            axi_last_V_2_i_i_phi_fu_346_p4 = eol_reg_319;
        end else if ((1'b0 == brmerge_i_i_reg_535)) begin
            axi_last_V_2_i_i_phi_fu_346_p4 = reg_401_4;
        end else begin
            axi_last_V_2_i_i_phi_fu_346_p4 = ap_reg_phiprechg_axi_last_V_2_i_i_reg_341pp1_it1;
        end
    end else begin
        axi_last_V_2_i_i_phi_fu_346_p4 = ap_reg_phiprechg_axi_last_V_2_i_i_reg_341pp1_it1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it1) & (1'b0 == eol_2_i_i_reg_366))) begin
        eol_2_i_i_phi_fu_369_p4 = reg_401_4;
    end else begin
        eol_2_i_i_phi_fu_369_p4 = eol_2_i_i_reg_366;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526))) begin
        eol_i_i_phi_fu_311_p4 = axi_last_V_2_i_i_phi_fu_346_p4;
    end else begin
        eol_i_i_phi_fu_311_p4 = eol_i_i_reg_307;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526))) begin
        img_data_stream_0_V_blk_n = img_data_stream_0_V_full_n;
    end else begin
        img_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        img_data_stream_0_V_write = 1'b1;
    end else begin
        img_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526))) begin
        img_data_stream_1_V_blk_n = img_data_stream_1_V_full_n;
    end else begin
        img_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        img_data_stream_1_V_write = 1'b1;
    end else begin
        img_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526))) begin
        img_data_stream_2_V_blk_n = img_data_stream_2_V_full_n;
    end else begin
        img_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)))) begin
        img_data_stream_2_V_write = 1'b1;
    end else begin
        img_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        index2_out_blk_n = index2_out_full_n;
    end else begin
        index2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_525)) begin
        index2_out_write = 1'b1;
    end else begin
        index2_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        index3_out_blk_n = index3_out_full_n;
    end else begin
        index3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_525)) begin
        index3_out_write = 1'b1;
    end else begin
        index3_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        index_out_blk_n = index_out_full_n;
    end else begin
        index_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_525)) begin
        index_out_write = 1'b1;
    end else begin
        index_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it0) & (exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2)) | ((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it0) & (1'b0 == eol_2_i_i_phi_fu_369_p4)))) begin
        input_r_TDATA_blk_n = AXI_video_strm_V_data_V_0_vld_out;
    end else begin
        input_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        mode1_out_blk_n = mode1_out_full_n;
    end else begin
        mode1_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_525)) begin
        mode1_out_write = 1'b1;
    end else begin
        mode1_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        mode2_out_blk_n = mode2_out_full_n;
    end else begin
        mode2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_525)) begin
        mode2_out_write = 1'b1;
    end else begin
        mode2_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        modeOriginal_out_blk_n = modeOriginal_out_full_n;
    end else begin
        modeOriginal_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_525)) begin
        modeOriginal_out_write = 1'b1;
    end else begin
        modeOriginal_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        mode_out_blk_n = mode_out_full_n;
    end else begin
        mode_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_525)) begin
        mode_out_write = 1'b1;
    end else begin
        mode_out_write = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_354) begin
        if (~(1'b0 == brmerge_i_i_reg_535)) begin
            p_Val2_s_phi_fu_358_p4 = axi_data_V_1_i_i_reg_330;
        end else if ((1'b0 == brmerge_i_i_reg_535)) begin
            p_Val2_s_phi_fu_358_p4 = reg_401_0;
        end else begin
            p_Val2_s_phi_fu_358_p4 = ap_reg_phiprechg_p_Val2_s_reg_354pp1_it1;
        end
    end else begin
        p_Val2_s_phi_fu_358_p4 = ap_reg_phiprechg_p_Val2_s_reg_354pp1_it1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_525) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((~(AXI_video_strm_V_data_V_0_vld_out == 1'b0) & (1'b0 == tmp_user_V_fu_419_p1))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~(AXI_video_strm_V_data_V_0_vld_out == 1'b0) & ~(1'b0 == tmp_user_V_fu_419_p1))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == exitcond3_i_i_fu_432_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_pp1_stg0_fsm_4 : begin
            if (~((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)) & ~(1'b1 == ap_reg_ppiten_pp1_it0))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(((1'b1 == ap_reg_ppiten_pp1_it0) & ap_sig_404) | ((1'b1 == ap_reg_ppiten_pp1_it1) & ap_sig_414)) & ~(1'b1 == ap_reg_ppiten_pp1_it0))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_pp2_stg0_fsm_5 : begin
            if (~((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it1) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421) & ~(1'b1 == ap_reg_ppiten_pp2_it0))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_5;
            end else if (((1'b1 == ap_sig_cseq_ST_pp2_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp2_it1) & ~((1'b1 == ap_reg_ppiten_pp2_it0) & ap_sig_421) & ~(1'b1 == ap_reg_ppiten_pp2_it0))) begin
                ap_NS_fsm = ap_ST_st9_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_5;
            end
        end
        ap_ST_st9_fsm_6 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AXI_video_strm_V_data_V_0_vld_in = input_r_TVALID;

assign AXI_video_strm_V_data_V_0_vld_out = ((input_r_TVALID | AXI_video_strm_V_data_V_0_has_vld_data_reg) & ~AXI_video_strm_V_data_V_0_areset_d);

assign AXI_video_strm_V_dest_V_0_vld_in = input_r_TVALID;

assign AXI_video_strm_V_id_V_0_vld_in = input_r_TVALID;

assign AXI_video_strm_V_keep_V_0_vld_in = input_r_TVALID;

assign AXI_video_strm_V_last_V_0_vld_in = input_r_TVALID;

assign AXI_video_strm_V_strb_V_0_vld_in = input_r_TVALID;

assign AXI_video_strm_V_user_V_0_vld_in = input_r_TVALID;

assign ap_reg_phiprechg_axi_last_V_2_i_i_reg_341pp1_it1 = 'bx;

assign ap_reg_phiprechg_p_Val2_s_reg_354pp1_it1 = 'bx;

always @ (*) begin
    ap_sig_25 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_311 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_318 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_338 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_354 = ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond4_i_i_reg_526));
end

always @ (*) begin
    ap_sig_404 = ((exitcond4_i_i_fu_444_p2 == 1'b0) & (1'b0 == brmerge_i_i_fu_459_p2) & (AXI_video_strm_V_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_sig_414 = (((1'b0 == exitcond4_i_i_reg_526) & (img_data_stream_0_V_full_n == 1'b0)) | ((1'b0 == exitcond4_i_i_reg_526) & (img_data_stream_1_V_full_n == 1'b0)) | ((1'b0 == exitcond4_i_i_reg_526) & (img_data_stream_2_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_421 = ((1'b0 == eol_2_i_i_phi_fu_369_p4) & (AXI_video_strm_V_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_sig_440 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_474 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_481 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_525 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (mode2_out_full_n == 1'b0) | (mode1_out_full_n == 1'b0) | (mode_out_full_n == 1'b0) | (modeOriginal_out_full_n == 1'b0) | (index_out_full_n == 1'b0) | (index2_out_full_n == 1'b0) | (index3_out_full_n == 1'b0));
end

assign brmerge_i_i_fu_459_p2 = (sof_1_i_i_fu_124 | eol_i_i_phi_fu_311_p4);

assign exitcond3_i_i_fu_432_p2 = ((p_i_i_reg_285 == ap_const_lv11_438) ? 1'b1 : 1'b0);

assign exitcond4_i_i_fu_444_p2 = ((p_6_i_i_reg_296 == ap_const_lv11_780) ? 1'b1 : 1'b0);

assign i_V_fu_438_p2 = (p_i_i_reg_285 + ap_const_lv11_1);

assign img_data_stream_0_V_din = p_Val2_s_phi_fu_358_p4[7:0];

assign img_data_stream_1_V_din = {{p_Val2_s_phi_fu_358_p4[ap_const_lv32_F : ap_const_lv32_8]}};

assign img_data_stream_2_V_din = {{p_Val2_s_phi_fu_358_p4[ap_const_lv32_17 : ap_const_lv32_10]}};

assign index2_out_din = index2;

assign index3_out_din = index3;

assign index_out_din = index;

assign input_r_TREADY = AXI_video_strm_V_dest_V_0_in_rdy;

assign j_V_fu_450_p2 = (p_6_i_i_reg_296 + ap_const_lv11_1);

assign mode1_out_din = mode1;

assign mode2_out_din = mode2;

assign modeOriginal_out_din = modeOriginal;

assign mode_out_din = mode;

assign tmp_user_V_fu_419_p1 = AXI_video_strm_V_user_V_0_data_out;

endmodule //filter_AXIvideo2Mat132
